@model NiceHandles.Models.CuocHop

@using NiceHandles.Models
@{
    ViewBag.Title = Model.name;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var db = new NiceHandles.Models.NHModel();
    var hoso = db.HoSoes.Find(Model.hoso_id);
    var hopdong = db.Contracts.Find(hoso.contract_id);
    var address = db.Addresses.Find(hopdong.address_id);
    var account = db.Accounts.Find(Model.taoboi);
}
<input id="thisid" value="@Model.id" type="hidden" />
<h2>
    @(hoso.name + " - " + address.name )
    <span style="float: right; font-size: 20px;">
        <label style="margin-left: 10px;" class="text-@(XModels.Colors[(int)XCuocHop.eStatus.Cho])">
            <input type="radio" @(Model.status == (int)XCuocHop.eStatus.Cho ? "checked" : "") value="@((int)XCuocHop.eStatus.Cho)" name="rdoStatus" />
            Chờ duyệt
        </label>
        <label style="margin-left: 10px;" class="text-@(XModels.Colors[(int)XCuocHop.eStatus.Pending])">
            <input type="radio" @(Model.status == (int)XCuocHop.eStatus.Pending ? "checked" : "") value="@((int)XCuocHop.eStatus.Pending)" name="rdoStatus" />
            Xem xét
        </label>
        <label style="margin-left: 10px;" class="text-@(XModels.Colors[(int)XCuocHop.eStatus.Duyet])">
            <input type="radio" @(Model.status == (int)XCuocHop.eStatus.Duyet ? "checked" : "") value="@((int)XCuocHop.eStatus.Duyet)" name="rdoStatus" />
            Giang duyệt
        </label>
        <label style="margin-left: 10px;" class="text-@(XModels.Colors[(int)XCuocHop.eStatus.HoiDong])">
            <input type="radio" @(Model.status == (int)XCuocHop.eStatus.HoiDong ? "checked" : "") value="@((int)XCuocHop.eStatus.HoiDong)" name="rdoStatus" />
            Hội đồng duyệt
        </label>
    </span>
</h2>
<p>
    Người đề xuất: <i> @account.fullname </i>
</p>
<p>
    Ngày đề xuất: <i>@Model.time.ToString("dd/MM/yyyy")</i>
</p>
<h4>
    @XCuocHop.sLoai[Model.type]
</h4>

<div class="row">
    <div class="col-md-6">
        @using (Html.BeginForm("UploadTaiLieuThamKhao", "CuocHops", FormMethod.Post, new { enctype = "multipart/form-data", id = "frmTaiLieuThamKhao" }))
        {
            <h5><i class="text-warning">Tài liệu tham khảo</i></h5>
            if (!string.IsNullOrEmpty(Model.tailieuthamkhao))
            {
                <a style="float: left; margin-right: 10px;" href="@Model.tailieuthamkhao" target="_blank"><i class="fa fa-eye"> Xem</i></a>
            }
            <input id="hdid" value="@Model.id" type="hidden" name="hdid" />
            <input style="float: left; margin-right: 10px;" id="tailieuthamkhao" name="tailieuthamkhao" type="file" class="" />
            <input type="submit" value="Cập nhật" class="btn btn-primary fa fa-upload" />
        }
    </div>
    <div class="col-md-6">
        @using (Html.BeginForm("UploadBienBan", "CuocHops", FormMethod.Post, new { enctype = "multipart/form-data", id = "frmBienBan" }))
        {
            <h5><i class="text-warning">Biên bản cuộc họp</i> </h5>
            if (!string.IsNullOrEmpty(Model.bienban))
            {
                <a style="float: left; margin-right: 10px;" href="@Model.bienban" target="_blank"><i class="fa fa-eye"> Xem</i></a>
            }
            <input id="hdid" value="@Model.id" type="hidden" name="hdid" />
            <input style="float: left; margin-right: 10px;" id="bienban" name="bienban" type="file" class="" />
            <input type="submit" value="Cập nhật" class="btn btn-primary fa fa-upload" />
        }
    </div>
</div>
<hr />
@using (Html.BeginForm("Details", "CuocHops", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.id)
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.mucdo, "Mức độ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.mucdo, new SelectList(XCuocHop.sMucDo, "Key", "Value"), new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.vande, "Mục đích", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.vande, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.vande, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ketqua, "Nguồn gốc", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.ketqua, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ketqua, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ghichu, "Ghi chú", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.ghichu, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ghichu, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
                @Html.LabelFor(model => model.bienban, "Biên bản cuộc họp", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBox("bienban", "", new { @class = "form-control", @type = "file" })
                    @if (!string.IsNullOrEmpty(Model.bienban))
                    {
                        <a href="@Model.bienban" target="_blank">Biên bản cuộc họp</a>
                    }
                </div>
            </div>*@
        @*<div class="form-group">
                @Html.Label("Ngày duyệt", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.time_duyet, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control datetime",
                            autocomplete = "off",
                            Value = Html.Raw(Model.time_duyet.HasValue ? Model.time_duyet.Value.ToString("dd/MM/yyyy") : "")
                        }
                    })
                    @Html.ValidationMessageFor(model => model.time_duyet, "", new { @class = "text-danger" })
                </div>
            </div>*@
        @*<div class="form-group">
                @Html.LabelFor(model => model.status, "Tình trạng", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.status, new SelectList(XCuocHop.sStatus, "Key", "Value"), new { @class = "form-control" })
                </div>
            </div>*@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Lưu lại" class="btn btn-default" />
                <input type="button" value="Ghi biên bản" onclick="GhiBienBanCuocHop(@Model.id);" class="btn btn-info" />
            </div>
        </div>
    </div>
}
<iframe id="my_iframe" style="display:none;"></iframe>
<div>
    @Html.ActionLink("Về danh sách", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {
            $(".datetime").datepicker({
                "autoclose": true,
                "todayHighlight": true,
                "dateFormat": "dd/mm/yyyy",
                "format": "dd/mm/yyyy",
            }).datepicker();
            $("#frmTaiLieuThamKhao :submit").click(function () {
                var fileLength = $("#frmTaiLieuThamKhao :file")[0].files.length;
                if (fileLength === 0) {
                    toastr.error("Chưa có file được chọn", "Lỗi", { timeOut: 5000 });
                    return false;
                }
            });
            $("input[name='rdoStatus']").change(function () {
                var id = $("#thisid").val();
                var value = $(this).val();
                $.ajax({
                    url: '/CuocHops/StatusChange',
                    data: {
                        id: id,
                        sta: value
                    },
                    type: "POST",
                    dataType: "JSON",
                    success: function (rs) {
                        toastr.success("Thay đổi trạng thái thành công", "Cuộc Họp", { timeOut: 5000 });
                    }
                });
            });
        });
        $(function () {
            $.validator.methods.date = function (value, element) {
                return this.optional(element) || moment(value, "DD/MM/YYYY", true).isValid();
            }
        });
        function GhiBienBanCuocHop(id) {
            $.ajax({
                url: '/CuocHops/GhiBienBanCuocHop',
                data: {
                    id: id
                },
                type: "POST",
                dataType: "JSON",
                success: function (url) {
                    document.getElementById('my_iframe').src = url;
                }
            });
        }
    </script>
}

