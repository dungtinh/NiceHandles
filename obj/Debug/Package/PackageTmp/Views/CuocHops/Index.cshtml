@model PagedList.IPagedList<NiceHandles.Models.CuocHop>
@using NiceHandles.Models
@using PagedList.Mvc;
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var db = new NiceHandles.Models.NHModel();
}

<h2>CUỘC HỌP</h2>

@using (Html.BeginForm("Index", "CuocHops", FormMethod.Post))
{
    <div class="row">
        <div class="col-sm-2">
            <div class="form-group">
                @Html.TextBox("Search_Data", ViewBag.FilterValue as string, new { @class = "form-control", placeholder = "Tìm kiếm" })
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                @Html.DropDownList("type", new SelectList(XCuocHop.sLoai.Select(x => new ListDropDown() { id = x.Key, name = x.Value }), "id", "name"), "--Loại--", new { @class = "form-control" })
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                @Html.DropDownList("status", new SelectList(XCuocHop.sStatus.Select(x => new ListDropDown() { id = x.Key, name = x.Value }), "id", "name"), "--Trạng thái--", new { @class = "form-control" })
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                <button type="submit" class="btn btn-primary" style="height: 32px; width: 100px;"><i class="fa fa-search"></i> Tìm kiếm</button>
            </div>
        </div>
    </div>
}
<table class="table">
    <tr>
        <th>
            Mức độ
        </th>
        <th>
            Hồ sơ
        </th>
        <th>
            Địa chỉ
        </th>
        <th>
            Loại cuộc họp
        </th>
        <th>
            Ngày đề xuất
        </th>
        <th>
            Tạo bởi
        </th>
        <th>
            Mục đích
        </th>
        <th>
            TL tham khảo
        </th>
        <th>
            Nguồn gốc
        </th>
        <th>
            Ghi chú
        </th>
        <th>
            Biên bản
        </th>
        <th>
            Ngày duyệt
        </th>
        <th>
            Tình trạng
        </th>
        <th style="width: 80px;"></th>
    </tr>

    @foreach (var item in Model)
    {
        var taoboi = db.Accounts.Find(item.taoboi);
        var hoso = db.HoSoes.Find(item.hoso_id);
        var hopdong = db.Contracts.Find(hoso.contract_id);
        var address = db.Addresses.Find(hopdong.address_id);
        <tr>
            <td>
                @if (item.mucdo == (int)XCuocHop.eMucDo.Gap)
                {
                    <i class="fa fa-bolt text-danger">
                        @Html.Raw(NiceHandles.Models.XCuocHop.sMucDo[item.mucdo])
                    </i>
                }
            </td>
            <td>
                @Html.ActionLink(hoso != null ? hoso.name : item.name, "details", "hosoes", new { id = hoso.id }, null)
            </td>
            <td>
                @address.name
            </td>
            <td>
                @(XCuocHop.sLoai[item.type] )
            </td>
            <td>
                @item.time.ToString("dd/MM/yyyy")
            </td>
            <td>
                @taoboi.fullname
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.vande)
            </td>
            <td>
                <a href="@item.tailieuthamkhao" target="_blank"> @Html.Raw(string.IsNullOrEmpty(item.tailieuthamkhao) ? "---" : "<i class='fa fa-eye'></i>")</a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ketqua)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ghichu)
            </td>
            <td>
                <a href="@item.bienban" target="_blank"> @Html.Raw(string.IsNullOrEmpty(item.bienban) ? "---" : "<i class='fa fa-eye'></i>")</a>
            </td>
            <td>
                @Html.Raw(item.time_duyet.HasValue ? item.time_duyet.Value.ToString("dd/MM/yyyy") : "")
            </td>
            <td class="text-@Html.Raw(XModels.Colors[item.status])">
                @Html.Raw(NiceHandles.Models.XCuocHop.sStatus[item.status])
                @if (item.status != (int)XCuocHop.eStatus.HoiDong)
                {
                    <button class="btn btn-success" onclick="CuocHopDuyet(@item.id, @((int)XCuocHop.eStatus.HoiDong), this);">
                        Duyệt
                    </button>
                }
            </td>
            <td>
                @Html.ActionLink(" Chi tiết", "details", new { id = item.id }, new { @class = "fa fa-eye" })
                @Html.ActionLink(" | Xóa", "Delete", new { id = item.id })
            </td>
        </tr>
    }

</table>
@if (Model.PageCount > 1)
{
    <div class="row" style="margin-top: 10px;">
        <div class="col-sm-1">
            Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount
        </div>
        <div class="col-sm-10">
            @Html.PagedListPager(Model, Page_No => Url.Action("Index", new { Page_No, Filter_Value = ViewBag.FilterValue, status = ViewBag.status, type = ViewBag.type }))
        </div>
    </div>
}
@section Scripts {
    <script>
        function CuocHopDuyet(id, value, ctr) {
            $.ajax({
                url: '/CuocHops/StatusChange',
                data: {
                    id: id,
                    sta: value
                },
                type: "POST",
                dataType: "JSON",
                success: function (rs) {
                    toastr.success("Thay đổi trạng thái thành công", "Cuộc Họp", { timeOut: 5000 });
                    $(ctr).hide();
                }
            });
        }
    </script>
}