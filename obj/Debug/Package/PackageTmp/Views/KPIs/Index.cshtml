@model PagedList.IPagedList<NiceHandles.Models.KPI>
@using PagedList.Mvc;
@using NiceHandles.Models
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var db = new NHModel();
}

<h2>KPI</h2>

<p>
    @Html.ActionLink("Thêm mới", "Create")
    <a href="#" class="btn btn-danger" style="float: right; margin-bottom: 10px;"
       onclick="window.open('/kpis/baocaongay', 'win', 'width=1600,height=1000')">Báo cáo ngày</a>
</p>
<table class="table">
    <tr>
        <th>
            Ngày tháng
        </th>
        <th>
            Tài khoản
        </th>
        <th>
            Đăng Facebook
        </th>
        <th>
            Đăng Zalo
        </th>
        <th>
            Đăng Group FB
        </th>
        <th>
            Đăng Fanpage FB
        </th>
        <th>
            Đăng Website
        </th>
        <th>
            Kết bạn Zalo
        </th>
        <th>
            Kết bạn Facebook
        </th>
        <th>
            Chỉ tiêu
        </th>
    </tr>

    @foreach (var item in Model)
    {
        var user = db.Accounts.Find(item.user_id);
        var links = db.KPILinks.Where(x => x.KPI_id == item.id).ToArray();
        var fbs = links.Where(x => x.type == (int)XKPI.eType.Facebook);
        var zls = links.Where(x => x.type == (int)XKPI.eType.Zalo);
        var gps = links.Where(x => x.type == (int)XKPI.eType.Group);
        var fps = links.Where(x => x.type == (int)XKPI.eType.Fanpage);
        var wbs = links.Where(x => x.type == (int)XKPI.eType.Website);
        //
        var social = db.Socials.Where(x => x.kpi_id == item.id).ToArray();
        var kbfbs = social.Where(x => x.type == (int)XKPI.eType.PostFacebook);
        var kbzls = social.Where(x => x.type == (int)XKPI.eType.PostZalo);
        // Đánh giá
        var chitieus = db.KPIChiTieux.Where(x => x.user_id == user.id && x.chitieu > 0);
        var done = 0;
        var max = chitieus.Count();

        foreach (var ct in chitieus)
        {
            var process = links.Where(x => x.type == ct.type).Count();
            if (process >= ct.chitieu)
            {
                done++;
            }
        }
        foreach (var ct in chitieus)
        {
            var process = social.Where(x => x.type == ct.type).Count();
            if (process >= ct.chitieu)
            {
                done++;
            }
        }

        var index = 0;
        string sfb = "";
        foreach (var per in fbs)
        {
            index++;
            sfb += "<a href='" + per.link + "' target=\"_blank\" class='text-" + XModels.Colors[index] + "'>Link " + index + "</a>&nbsp;";
        }
        sfb += "";
        string szl = "";
        index = 0;
        foreach (var per in zls)
        {
            index++;
            szl += "<a href='" + per.link + "' target=\"_blank\" class='text-" + XModels.Colors[index] + "'>Link " + index + "</a>&nbsp;";
        }
        szl += "";
        index = 0;
        string sgp = "";
        foreach (var per in gps)
        {
            index++;
            sgp += "<a href='" + per.link + "' target=\"_blank\" class='text-" + XModels.Colors[index] + "'>Link " + index + "</a>&nbsp;";
        }
        sgp += "";
        string sfp = "";
        index = 0;
        foreach (var per in fps)
        {
            index++;
            sfp += "<a href='" + per.link + "' target=\"_blank\" class='text-" + XModels.Colors[index] + "'>Link " + index + "</a>&nbsp;";
        }
        sfp += "";
        index = 0;
        string swb = "";
        foreach (var per in wbs)
        {
            index++;
            if (index < 10)
            {
                swb += "<a href='" + per.link + "' target=\"_blank\" class='text-" + XModels.Colors[index] + "'>Link " + index + "</a>&nbsp;";
            }
            else
            {
                swb += "<a href='" + per.link + "' target=\"_blank\" class='text-" + XModels.Colors[index - 9] + "'>Link " + index + "</a>&nbsp;";
            }
        }
        swb += "";
        index = 0;
        string skbzl = "";
        foreach (var per in kbzls)
        {
            index++;
            skbzl += "<span class='text-" + XModels.Colors[index] + "'>" + per.name + "|" + per.id_no + "</span>&nbsp;";
        }
        skbzl += "";

        string skbfb = "";
        index = 0;
        foreach (var per in kbfbs)
        {
            index++;
            skbfb += "<span class='text-" + XModels.Colors[index] + "'>" + per.name + "|" + per.id_no + "</span>&nbsp;";
        }
        skbfb += "";

        <tr>
            <td>
                @item.ngaythang.ToString("dd/MM/yyyy")
            </td>
            <td>
                @user.fullname
            </td>
            <td>
                @Html.Raw(sfb)
            </td>
            <td>
                @Html.Raw(szl)
            </td>
            <td>
                @Html.Raw(sgp)
            </td>
            <td>
                @Html.Raw(sfp)
            </td>
            <td>
                @Html.Raw(swb)
            </td>
            <td>
                @Html.Raw(kbzls.Count())
                @*@Html.Raw(skbzl)*@
            </td>
            <td>
                @Html.Raw(kbfbs.Count())
                @*skbfb*@
            </td>
            <td class="text-@(done<max?"danger": "primary")">
                @Html.Raw(done + "/" + max)
            </td>
        </tr>
    }

</table>
@if (Model.PageCount > 1)
{
    <div class="row" style="margin-top: 10px;">
        <div class="col-sm-1">
            Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount
        </div>
        <div class="col-sm-10">
            @Html.PagedListPager(Model, Page_No => Url.Action("Index", new { Page_No }))
        </div>
    </div>
}