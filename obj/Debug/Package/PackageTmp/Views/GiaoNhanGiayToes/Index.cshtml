@model PagedList.IPagedList<NiceHandles.Models.GiaoNhanGiayTo>
@using PagedList.Mvc
@using NiceHandles.Models
@{
    ViewBag.Title = "Index";
    var db = ViewBag.db as NiceHandles.Models.NHModel;
}

<h2>Danh sách giao nhận giấy tờ</h2>

<p>
    @Html.ActionLink("Thêm mới", "Create")
</p>
@using (Html.BeginForm("Index", "GiaoNhanGiayToes", FormMethod.Get, new { novalidate = "novalidate" }))
{
    <div class="row">
        <div class="col-sm-2">
            <div class="form-group">
                @Html.TextBox("Search_Data", ViewBag.FilterValue as string, new { @class = "form-control", placeholder = "Tìm kiếm" })
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                @Html.DropDownList("account", ViewBag.Accounts as SelectList, "Tài khoản", new { @class = "form-control", disableValidation = "true" })
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-group">
                @Html.DropDownList("contract", ViewBag.lstCT as SelectList, "Hợp đồng", new { @class = "form-control", disableValidation = "true" })
            </div>
        </div>
        <div class="col-lg-2 col-sm-2 ">
            <div class="form-group">
                <button type="submit" class="btn btn-primary" style="height: 28px; width: 100px;">Tìm kiếm</button>
            </div>
        </div>
    </div>
}
<table class="table">
    <tr>
        <th>
            Hợp đồng
        </th>
        <th>
            Người thực hiện
        </th>
        <th>
            Giấy tờ
        </th>
        <th>
            Nơi nhận
        </th>
        <th>
            Người nhận
        </th>
        <th>
            Người giao
        </th>
        <th>
            Ngày hạn
        </th>
        <th>
            Trạng thái
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        var ct = db.Contracts.Find(item.contract_id);
        var cus = ct == null ? new Customer() { name = "Đã xóa" } : db.Customers.Find(ct.customer_id);
        var acc = db.Accounts.Find(item.account_id);
        <tr style="@Html.Raw( (item.ngayhan.HasValue && item.ngayhan < DateTime.Now) ? "color:red;" : "")">
            <td>
                @cus.name
            </td>
            <td>
                @Html.Raw(acc != null ? acc.fullname : null)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.giayto)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.noinhan)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.nguoinhan)
            </td>
            <td>
                @item.ngaygiao.ToString("dd/MM/yyyy")
            </td>
            <td>
                @Html.Raw(item.ngayhan.HasValue ? item.ngayhan.Value.ToString("dd/MM/yyyy") : null)
            </td>
            <td>
                @Html.DisplayFor(modelItem => XModels.sStatus[item.trangthai])
            </td>
            <td>
                @Html.ActionLink("Sửa", "Edit", new { id = item.id }) |
                @Html.ActionLink("Xóa", "Delete", new { id = item.id })
            </td>
        </tr>
    }

</table>
@if (Model.PageCount > 1)
{
    <div class="row" style="margin-top: 10px;">
        <div class="col-sm-1">
            Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount
        </div>
        <div class="col-sm-10">
            @Html.PagedListPager(Model, Page_No => Url.Action("Index", new { Page_No, Filter_Value = ViewBag.FilterValue, account_id = ViewBag.account_id, contract_id = ViewBag.contract_id }))
        </div>
    </div>
}
@section Style {
    <link href="~/Content/select2/select2.min.css" rel="stylesheet" />
    <style>
        .select2-result-repository-meta div {
            display: inline-block;
        }

        .select2-result-repository-title {
            width: 65%;
        }

        .select2-result-repository-description {
            width: 30%;
        }
    </style>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/select2.min.js"></script>
    <script>
        $(document).ready(function () {
            $("#contract").select2({
                ajax: {
                    url: "/Contracts/GetContract",
                    dataType: 'json',
                    type: "Get",
                    delay: 500,
                    data: function (params) {
                        return params;
                    },
                    processResults: function (data, params) {
                        params.page = params.page || 1;
                        return {
                            results: data.items,
                            pagination: {
                                more: (params.page * 25) < data.total_count
                            }
                        };
                    },
                    cache: true
                },
                placeholder: 'VD: Nguyễn Văn A',
                allowClear: true,
                templateResult: formatRepo,
                templateSelection: formatRepoSelection
            });
        });
        function formatRepo(repo) {
            if (repo.loading) {
                return repo.text;
            }

            var $container = $(
                "<div class='select2-result-repository clearfix'>" +
                "   <div class='select2-result-repository-meta'>" +
                "       <div class='select2-result-repository-title'></div>" +
                "       <div class='select2-result-repository-description'></div>" +
                "   </div>" +
                "</div>"
            );

            $container.find(".select2-result-repository-title").text(repo.name);
            $container.find(".select2-result-repository-description").text(repo.text);

            return $container;
        }

        function formatRepoSelection(repo) {
            return repo.name || repo.text;
        }
    </script>
}