@model NiceHandles.Models.PayPlan
@using NiceHandles.Models;
@{
    var db = new NHModel();
    ViewBag.Title = "Create";
    IQueryable<Category> categories;
    if (!Model.contract_id.HasValue)
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
        categories = db.Categories.Where(x => x.type == (int)XCategory.eType.Chi && x.parent_id == (int)XCategory.eParent.VanPhong);
    }
    else
    {
        Layout = "~/Views/Shared/_LayoutEmpty.cshtml";
        categories = db.Categories.Where(x => x.id == Model.category_id);
    }
}

<h2>Thêm mới</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Duyệt chi</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (Model.contract_id.HasValue)
        {
            var contract = db.Contracts.Where(x => x.id == Model.contract_id);
            <div class="form-group">
                @Html.LabelFor(model => model.contract_id, "Hợp đồng", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.contract_id, new SelectList(contract, "id", "name"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.contract_id, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        <div class="form-group">
            @Html.LabelFor(model => model.account_id, "Người nhận", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.account_id, new SelectList(Common.cAccounts(), "id", "fullname"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.account_id, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.type, "Thu/Chi", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.type, new SelectList(XCategory.sType, "Key", "Value"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.category_id, "Loại chi", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.category_id, new SelectList(categories, "id", "name"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.category_id, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.currency, "Loại tiền", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.currency, new SelectList(XModels.sLoaiTien, "Key", "Value"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.currency, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.amount, "Số tiền", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.amount, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.note, "Ghi chú", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.note, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.note, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Thêm mới" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Danh sách", "Index")
</div>
@if (Model.contract_id.HasValue)
{
    <style>
        .form-horizontal .form-group {
            margin-left: 0 !important;
            margin-right: 0 !important;
        }
    </style>
}