@model NiceHandles.Models.PayPlan
@using NiceHandles.Models;
@using Microsoft.AspNet.Identity;
@{
    ViewBag.Title = "Thêm mới";
    var db = new NHModel();
    var types = new SelectList(XCategory.sType, "Key", "Value");
    var username = User.Identity.GetUserName();
    var us = db.Accounts.Where(x => x.UserName.Equals(username)).Single();
}

<fieldset>
    <legend style="text-align: right;">Thu chi ngoài hồ sơ</legend>
    @using (Html.BeginForm("CreateX", "PayPlans", FormMethod.Post, new { role = "form", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="col-md-6">
                    <div class="row">
                        <div class="form-group">
                            @Html.Label("Thời gian", new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.time, new { htmlAttributes = new { @class = "form-control datetime", Value = Html.Raw(Model.time.ToString("dd/MM/yyyy")) } })
                                @Html.ValidationMessageFor(model => model.time, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="row">
                        <div class="form-group">
                            @Html.Label("Loại tiền", new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.currency, new SelectList(XModels.sLoaiTien, "Key", "Value"), new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.currency, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="row">
                        <div class="form-group">
                            @Html.Label("Loại", new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.type, types, "Chọn thu hoặc chi", new { @class = "form-control", @onchange = "FillCategory()" })
                                @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="row">
                        <div class="form-group">
                            @Html.Label("Loại chi tiết", new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.category_id, new SelectList(Enumerable.Empty<SelectListItem>(), "", ""), "Loại chi tiết", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.category_id, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="row">
                        <div class="form-group">
                            @Html.Label("Số tiền", new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.amount, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                                @Html.ValidationMessageFor(model => model.amount, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="row">
                        <div class="form-group">
                            @Html.Label("Tài khoản", new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.account_id, new SelectList(ViewBag.ACCOUNTS, "id", "fullname", us), "Người nhận/chi", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.account_id, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group">
                    @Html.Label("Ghi chú", new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.TextAreaFor(model => model.note, new { @class = "form-control" })
                    </div>
                    <div class="col-md-2" style="text-align: right;">
                        <input type="submit" value="Chấp nhận" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        </div>
    }
</fieldset>
