@model PagedList.IPagedList<NiceHandles.Models.vPhongDoVe>
@using PagedList.Mvc;
@using NiceHandles.Models

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Phòng đo vẽ";
    var db = new NiceHandles.Models.NHModel();
    var us = (Account)ViewBag.USER;
    //var accounts = db.Accounts.Where(x => x.hasNote == (int)XModels.eYesNo.Yes).ToArray();
}
<h3 class="text-danger">PHÒNG ĐO VẼ</h3>
<br />
@using (Html.BeginForm("Index", "Doves", FormMethod.Get))
{
    <div class="row">
        <div class="col-sm-1">
            <div class="form-group">
                @Html.TextBox("Search_Data", ViewBag.FilterValue as string, new { @class = "form-control", placeholder = "Từ khóa" })
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                @Html.DropDownList("acc", new SelectList(db.Accounts.Where(x => x.sta == (int)XAccount.eStatus.Processing).ToArray(), "id", "fullname"), "--- Người thực hiện ---", new { @class = "form-control", title = "Người thực hiện" })
            </div>
        </div>
        <div class="col-sm-1">
            <div class="form-group">
                @Html.DropDownList("add", new SelectList(db.Addresses.Select(x => new ListDropDown() { id = x.id, name = x.name }), "id", "name"), "--- Địa chỉ ---", new { @class = "form-control", title = "Địa chỉ" })
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                @Html.DropDownList("ser", new SelectList(db.Services.Select(x => new ListDropDown() { id = x.id, name = x.name }), "id", "name"), "--- Dịch vụ ---", new { @class = "form-control", title = "Dịch vụ" })
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                @Html.DropDownList("uq", new SelectList(db.Accounts.Where(x => x.is_uq == (int)XModels.eYesNo.Yes).Select(x => new ListDropDown() { id = x.id, name = x.fullname }), "id", "name"), "--- Phụ trách ---", new { @class = "form-control", title = "Phụ trách" })
            </div>
        </div>
        <div class="col-sm-1">
            <div class="form-group">
                @Html.DropDownList("sta", new SelectList(XDove.sStatus.Select(x => new ListDropDown() { id = x.Key, name = x.Value }), "id", "name"), "--- Trạng thái ---", new { @class = "form-control", title = "Trạng thái" })
            </div>
        </div>
        <div class="col-sm-1">
            <div class="form-group">
                <button type="submit" class="btn btn-danger cancel" style="height: 32px; width: 100px;">Tìm kiếm</button>
            </div>
        </div>
    </div>
}
<table class="table table-hover" id="blv">
    <thead>
        <tr>
            <th>
                Số Ngày TH
            </th>
            <th>
                Tên hồ sơ
            </th>
            <th>
                Người thực hiện
            </th>
            <th>
                Số liên hệ
            </th>
            <th>
                Địa chỉ
            </th>
            <th>
                Dịch vụ
            </th>
            <th>
                Phụ trách
            </th>
            <th title="File CAD">
                File CAD
            </th>
            <th title="Gmap">
                Gmap
            </th>
            <th>
                Trạng thái
            </th>
            <th>
                Nhật ký
            </th>
            <th>
                Xem hồ sơ
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            var hoso = db.HoSoes.Find(item.hoso_id);
            var contract = db.Contracts.Find(hoso.contract_id);
            var address = db.Addresses.Where(x => x.id == contract.address_id).Select(x => x.name).Single();
            var service = db.Services.Where(x => x.id == hoso.service_id).Select(x => x.name).Single();
            var account = db.Accounts.Where(x => x.id == hoso.account_id).Select(x => x.disname).Single();
            var partner = db.Partners.Where(x => x.id == contract.partner).Select(x => x.disname).Single();
            var nhatky = db.dovelichsus.Where(x => x.hoso_id == hoso.id).OrderByDescending(x => x.time).FirstOrDefault();
            var dovewf = db.dove_wf.Where(x => x.dove_id == item.id).OrderByDescending(x => x.time).FirstOrDefault();
            var account_dove = db.Accounts.Where(x => x.id == item.dove_account).Select(x => x.fullname).Single();
            <tr id="hs@(item.id)">
                <td>
                    @if (nhatky != null && nhatky.account_id != us.id)
                    {
                        @(nhatky!=null? nhatky.time.ToString("dd/MM/yyyy") : item.time.ToString("dd/MM/yyyy"))
                    }
                    else
                    {
                        <span>Đã trả lời</span>
                    }
                </td>
                <td>
                    @Html.ActionLink(hoso.name, "Details", new { id = item.id })
                </td>
                <td>
                    @account_dove
                </td>
                <td title="@contract.sodienthoai_mota">
                    @( Utils.LessString(contract.sodienthoai, 13, ".."))
                </td>
                <td>
                    @address
                </td>
                <td>
                    @( Utils.LessString(service, 12, ".."))
                </td>
                <td>
                    @account
                </td>
                <td style="text-align: center;">
                    @if (!string.IsNullOrEmpty(hoso.link_filecad))
                    {
                        @Html.TextBox("cad" + item.id, hoso.link_filecad, new { @style = "height:0; position:absolute;opacity:0;" })
                        <i class="fa fa-copy text-primary" style="cursor: pointer;" onclick="CopyText('@("#cad" +@item.id )');"></i>
                    }
                    else
                    {
                        <i>---</i>
                    }
                </td>
                <td>
                    @if (!string.IsNullOrEmpty(hoso.link_gmap))
                    {
                        @Html.TextBox("map" + item.id, hoso.link_gmap, new { @style = "height:0; position:absolute;opacity:0;" })
                        <i class="fa fa-copy text-primary" style="cursor: pointer;" onclick="CopyText('@("#map" +@item.id )');"></i>
                    }
                    else
                    {
                        <i>---</i>
                    }
                </td>
                <td>
                    @if (dovewf == null)
                    {
                        dovewf = new dove_wf() { status = 0 };
                    }
                    @XDove.sStatus[item.status]
                </td>
                <td>
                    @Html.Raw(nhatky != null ? nhatky.name : "---")
                </td>
                <td>
                    @Html.ActionLink("Xem", "Details", "hosoes", new { id = item.hoso_id }, null)
                </td>
            </tr>
        }
    </tbody>
</table>
@if (Model.PageCount > 1)
{
    <div class="row" style="margin-top: 10px;">
        <div class="col-sm-1">
            Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount
        </div>
        <div class="col-sm-10">
            @Html.PagedListPager(Model, Page_No => Url.Action("Index", new { Page_No, Filter_Value = ViewBag.FilterValue, acc = ViewBag.ACC, add = ViewBag.ADD, uq = ViewBag.UQ, ser = ViewBag.SER, sta = ViewBag.STA }))
        </div>
    </div>
}
@Html.Partial("../Shared/Modals/_ModalNH")
@section Style {
    <style>

        table .fa {
            font-size: 18px;
        }

        table a.fa {
            cursor: pointer;
        }

        td .fa {
            width: 30px;
            display: inline-block;
            text-align: center
        }
    </style>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {

        });
        function ShowPhongDoVeDetail(hoso_id) {
            $.ajax({
                url: '/Hosoes/ShowPhongDoVeDetail',
                type: 'GET',
                cache: false,
                data: { hoso_id: hoso_id }
            }).done(function (result) {
                $("#mdlNH .modal-body").html(result);
                $("#mdlNH").modal("show");
            });
        }
    </script>
}