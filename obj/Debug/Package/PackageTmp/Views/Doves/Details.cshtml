@model NiceHandles.Models.vPhongDoVe
@using NiceHandles.Models
@using Microsoft.AspNet.Identity;

@{
    var db = new NiceHandles.Models.NHModel();
    var address = db.Addresses.Where(x => x.id == Model.address_id).Select(x => x.name).Single();
    var service = db.Services.Where(x => x.id == Model.service_id).Select(x => x.name).Single();
    var account = db.Accounts.Where(x => x.id == Model.account_id).Select(x => x.disname).Single();
    var partner = db.Partners.Where(x => x.id == Model.partner).Select(x => x.disname).Single();
    string a_chusohuu;
    if (!string.IsNullOrEmpty(Model.a_hoten1))
    {
        a_chusohuu = !string.IsNullOrEmpty(Model.a_gioitinh) ? Model.a_gioitinh.Trim().ToUpper().Equals("NAM") ? "Ông" : "Bà" : "Ông/Bà";
        a_chusohuu += " " + Model.a_hoten + " và ";
        a_chusohuu += !string.IsNullOrEmpty(Model.a_gioitinh1) ? Model.a_gioitinh1.Trim().ToUpper().Equals("NAM") ? "Ông" : "Bà" : "Ông/Bà";
        a_chusohuu += " " + Model.a_hoten1;
    }
    else
    {
        a_chusohuu = !string.IsNullOrEmpty(Model.a_gioitinh) ? Model.a_gioitinh.Trim().ToUpper().Equals("NAM") ? "Ông" : "Bà" : "Ông/Bà";
        a_chusohuu += " " + Model.a_hoten;
    }
    var lstTrangThaiDove = db.dove_wf.Where(x => x.dove_id == Model.id).OrderByDescending(x => x.time).ToList();
    var wf = lstTrangThaiDove.FirstOrDefault();
    if (wf == null)
    {
        var username = User.Identity.GetUserName();
        var us = db.Accounts.Where(x => x.UserName.Equals(username)).Single();
        wf = new dove_wf();
        wf.account_id = us.id;
        wf.time = DateTime.Now;
        wf.account_id_fk = us.id;
        wf.dove_id = Model.id;
        wf.note = "Khởi tạo";
        wf.status = 0;
        db.dove_wf.Add(wf);
        db.SaveChanges();
        lstTrangThaiDove.Add(wf);
    }
}
<br />
<h4 style="text-align: center;">THÔNG TIN CHI TIẾT ĐO VẼ</h4>
<hr />
<div class="row">
    <div class="col-md-6">
        <dl class="dl-horizontal">
            <dt>Hồ sơ:</dt>
            <dd>@Model.name</dd>
            <dt>Ngày tạo:</dt>
            <dd>@Model.time.ToString("dd/MM/yyyy")</dd>
            <dt>Phụ trách:</dt>
            <dd>@account</dd>
            <dt>Dịch vụ:</dt>
            <dd>@service</dd>
            <dt>Địa chỉ:</dt>
            <dd>@address</dd>
            <dt>Số điện thoại:</dt>
            <dd>@Model.sodienthoai</dd>
            <dt>Mô tả SĐT:</dt>
            <dd>@Model.sodienthoai_mota</dd>
            <dt>Đối tác:</dt>
            <dd>@partner</dd>
            <dt>File CAD:</dt>
            <dd>@Model.link_filecad</dd>
            <dt>Gmap:</dt>
            <dd>@Model.link_gmap</dd>
        </dl>
    </div>
    <div class="col-md-6">
        <dl class="dl-horizontal">
            <dt>Chủ sử dụng đất:</dt>
            <dd>@a_chusohuu </dd>
            <dt>Hộ khẩu thường trú:</dt>
            <dd>@Model.a_hktt</dd>
            @if (!string.IsNullOrEmpty(Model.a_hktt) && !string.IsNullOrEmpty(Model.a_hktt1) && !Model.a_hktt.Trim().Equals(Model.a_hktt1.Trim()))
            {
                <dt>Hộ khẩu thường trú 2:</dt>
                <dd>@Model.a_hktt1</dd>
            }
            <dt>Số GCN:</dt>
            <dd>@Model.b_sogiaychungnhan</dd>
            <dt>Số vào sổ:</dt>
            <dd>@Model.b_sovaoso</dd>
            <dt>Nơi cấp:</dt>
            <dd>@Model.b_noicap</dd>
            <dt>Ngày cấp:</dt>
            <dd>@Html.Raw(Model.b_ngaycap.HasValue ? Model.b_ngaycap.Value.ToString("dd/MM/yyyy") : "")</dd>
            <dt>Số thửa:</dt>
            <dd>@Model.b_sothua</dd>
            <dt>Số tờ bản đồ:</dt>
            <dd>@Model.b_tobando</dd>
            <dt>Địa chỉ thửa đất:</dt>
            <dd>@Model.b_diachithuadat</dd>
            <dt>Diện tích trên bìa:</dt>
            <dd>@Model.b_dientichtrenbia</dd>
            <dt>Diện tích hiện trạng:</dt>
            <dd>@Model.b_dientich</dd>
            <dt>Hình thức sử dụng:</dt>
            <dd>@Model.b_hinhthucsudung</dd>
            <dt>Mục đích sử dụng:</dt>
            <dd>@Model.b_mucdichsudung</dd>
            <dt>Loại đất 1:</dt>
            <dd>@Model.b_loaidat1</dd>
            <dt>Diện tích 1:</dt>
            <dd>@Model.b_dientich1</dd>
            <dt>Loại đất 2:</dt>
            <dd>@Model.b_loaidat2</dd>
            <dt>Diện tích 2:</dt>
            <dd>@Model.b_dientich2</dd>
        </dl>
    </div>
</div>
<div class="row">
    <div class="col-md-8 col-sm-12" style="border: 1px solid #0094ff; border-radius: 10px; background-color: aliceblue; padding-top: 10px">
        <h4 style="text-align: center;">NHẬT KÝ ĐO VẼ</h4>
        <div id="phongdove">
            @Html.Partial("NhatKyDoVe", new dovelichsu() { hoso_id = Model.hoso_id })
        </div>
    </div>
    <!-- #region Back -->
    @*<div class="col-md-4 col-sm-12">
            <div style="border: 1px solid #ff6a00; border-radius: 10px; padding-top: 10px;">
                @using (Html.BeginForm("edit", "Doves", FormMethod.Post, new { role = "form", enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <h4 style="text-align: center;">BƯỚC THỰC HIỆN</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.id)
                        @Html.HiddenFor(model => model.hoso_id)
                        @Html.HiddenFor(model => model.status)
                        @Html.HiddenFor(model => model.time)
                        @Html.HiddenFor(model => model.time_start)
                        <div class="form-group">
                            @Html.LabelFor(model => model.time_vexong, "Ngày vẽ xong", htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.time_vexong, new
                                {
                                    htmlAttributes = new
                                    {
                                        @class = "form-control datetime",
                                        Value = (Model.time_vexong.HasValue ? Model.time_vexong.Value.ToString("dd/MM/yyyy") : null)
                                    }
                                })
                                @Html.ValidationMessageFor(model => model.time_vexong, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.time_tradiem, "Ngày trả điểm", htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.time_tradiem, new
                                {
                                    htmlAttributes = new
                                    {
                                        @class = "form-control datetime",
                                        Value = (Model.time_tradiem.HasValue ? Model.time_tradiem.Value.ToString("dd/MM/yyyy") : null)
                                    }
                                })
                                @Html.ValidationMessageFor(model => model.time_tradiem, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.time_dongdau, "Ngày nhận đóng dấu", htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.time_dongdau, new
                                {
                                    htmlAttributes = new
                                    {
                                        @class = "form-control datetime",
                                        Value = (Model.time_dongdau.HasValue ? Model.time_dongdau.Value.ToString("dd/MM/yyyy") : null)
                                    }
                                })
                                @Html.ValidationMessageFor(model => model.time_dongdau, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.time_thamdinh, "Ngày thẩm định", htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.time_thamdinh, new
                                {
                                    htmlAttributes = new
                                    {
                                        @class = "form-control datetime",
                                        Value = (Model.time_thamdinh.HasValue ? Model.time_thamdinh.Value.ToString("dd/MM/yyyy") : null)
                                    }
                                })
                                @Html.ValidationMessageFor(model => model.time_thamdinh, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-5 col-md-6">
                                <input type="submit" value="Lưu lại" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>*@

    <!-- #endregion -->
    <div class="col-md-4 col-sm-12">
        <div style="border: 1px solid #ff6a00; border-radius: 10px; padding-top: 10px;">
            <div class="form-horizontal">
                <h4 style="text-align: center;">BƯỚC THỰC HIỆN</h4>
                <div class="form-group">
                    @Html.Label("Ghi chú", new { @class = "control-label col-md-2" })
                    <div class="col-md-9">
                        @Html.TextArea("txtTrangThaiNote", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-9">
                        <input type="button" value="Bước tiếp" onclick="DoVeNextStep(@Model.id)" class="btn btn-primary" />
                        <input type="button" value="Lùi lại" onclick="DoVePrevStep(@Model.id)" class="btn btn-danger" />
                    </div>
                </div>
            </div>
            <table class="table" id="tblTrangThaiDoVe">
                <thead>
                    <tr>
                        <th>Thời gian</th>
                        <th>Người thực hiện</th>
                        <th>Ghi chú</th>
                        <th>Trạng thái</th>
                    </tr>
                </thead>
                @foreach (var item in lstTrangThaiDove)
                {
                    var acc = db.Accounts.Find(item.account_id);
                    <tr>
                        <td>@item.time.ToString("dd/MM/yy")</td>
                        <td>@acc.disname</td>
                        <td>@Html.Raw(item.note)</td>
                        <td>@XDove.sStatus[item.status]</td>
                    </tr>
                }
            </table>
            <fieldset>
                <legend style="text-align: center;">QUY TRÌNH ĐO VẼ</legend>
                <div style="padding: 10px;">
                    <h4>
                        Bước 1: Gọi điện chủ nhà (Đảm nhiệm chính a Kiên)
                    </h4>
                    <div class="row">
                        <div class="col-sm-4">
                            <strong> Yêu cầu</strong>
                            <p>
                                - Có số điện thoại
                                <br />
                                - Loại Dịch vụ
                                <br />
                                - Địa chỉ nếu có.
                            </p>
                        </div>
                        <div class="col-sm-8">
                            <strong>Nhiệm vụ</strong>
                            <p>
                                - Lấy địa chỉ<br />
                                - Hẹn giáp ranh<br />
                                - Chuẩn bị cọc, búa, đóng cọc mốc nếu có thể<br />
                                - Ghi lại yêu cầu tách thửa (Tư vấn phù hợp quy định)
                            </p>
                        </div>
                    </div>
                    <h4>
                        Bước 2: Bay Flycam (Đảm nhiệm chính Đức)
                    </h4>
                    <div class="row">
                        <div class="col-sm-4">
                            <strong> Yêu cầu</strong>
                            <p>
                                - Địa chỉ.<br />
                                - Bình sơn<br />
                                - Bìa/ Bản đồ giải thửa
                            </p>
                        </div>
                        <div class="col-sm-8">
                            <strong> Nhiệm vụ</strong>
                            <p>
                                - Kiểm tra các mốc, hỗ trợ đóng cọc<br />
                                - Lấy tên các hộ Giáp ranh<br />
                                - Sịt sơn, chụp ảnh chủ nhà chỉ mốc giới<br />
                                - Ghi mô tả giáp ranh chờ ký.<br />
                                - Ghi chú những thay đổi của hiện trạng so với giấy tờ đã cấp.<br />
                                - Lên phương án đo vẽ, chuẩn bị đồ nghề phù hợp, Soi đỉnh thửa<br />
                                - Truyền đạt các vấn đề thực địa cho phụ trách
                            </p>
                        </div>
                    </div>
                    <h4>
                        Bước 3: Đo vẽ (Đảm nhiệm chính a Kiên)
                    </h4>
                    <div class="row">
                        <div class="col-sm-4">
                            <strong> Yêu cầu</strong>
                            <p>
                                - Có mốc rõ ràng (đã xịt sơn đóng cọc)<br />
                                - Ảnh mốc giới<br />
                                - Phương án đo (TH phức tạp)<br />
                                - Xác định điểm đặt RTK
                            </p>
                        </div>
                        <div class="col-sm-8">
                            <strong> Nhiệm vụ</strong>
                            <p>
                                - Thực hiện đo vẽ<br />
                                - Ghi sơ họa giấy<br />
                                - Ký giáp ranh<br />
                                - Đánh số các điểm, xịt sơn điểm<br />
                                - Gửi Card
                            </p>
                        </div>
                    </div>
                    <h4>
                        Bước 4: Biên tập (Đảm nhiệm chính Quý)
                    </h4>
                    <div class="row">
                        <div class="col-sm-4">
                            <strong> Yêu cầu</strong>
                            <p>
                                - Bản sơ họa giấy<br />
                                - Ảnh flycam đã kẻ ranh giới<br />
                                - Bản Cad sơ họa các ranh giới, đường/ ngõ đi, giáp ranh<br />
                                * Phương án tách thửa<br />
                                - Thông tin hồ sơ
                            </p>
                        </div>
                        <div class="col-sm-8">
                            <strong> Nhiệm vụ</strong>
                            <p>
                                - Tra quy hoạch<br />
                                - Thực hiện bản vẽ chi tiết<br />
                                - Nhập thông tin<br />
                                - Up file ảnh quy hoạch lên phần mềm<br />
                                - In ảnh trên cao có bản vẽ, đồng thời, Đánh lại các điểm trên thực tế vào ảnh flycam.
                            </p>
                        </div>
                    </div>
                    <h4>
                        Bước 5: Kiểm tra (Đảm nhiệm chính a Kiên)
                    </h4>
                    <div class="row">
                        <div class="col-sm-4">
                            <strong> Yêu cầu</strong>
                            <p>
                                - Bản vẽ<br />
                                - Ảnh flycam ốp bản vẽ<br />
                                - Ảnh Quy hoạch
                            </p>
                        </div>
                        <div class="col-sm-8">
                            <strong> Nhiệm vụ</strong>
                            <p>
                                - Kiểm tra các chi tiết bản vẽ<br />
                                - Ký các thành viên tham gia<br />
                                - Điện thoại chủ nhà gửi bản vẽ<br />
                                - Up bản vẽ lên phần mềm
                            </p>
                        </div>
                    </div>
                    <h4>
                        Bước 6: Chuyển ký giáp ranh, chủ sử dụng đất (Đảm nhiệm chính Đức)
                    </h4>
                    <div class="row">
                        <div class="col-sm-4">
                            <strong> Yêu cầu</strong>
                            <p>
                                - Bản vẽ<br />
                                - Địa chỉ thửa đất<br />
                                - Số điện thoại
                            </p>
                        </div>
                        <div class="col-sm-8">
                            <strong> Nhiệm vụ</strong>
                            <p>
                                - Gọi điện chủ nhà, hẹn giờ xuống<br />
                                - Ký giáp ranh
                            </p>
                        </div>
                    </div>
                    <h4>
                        Bước 7: Hoàn thiện (Đảm nhiệm chính a Kiên)
                    </h4>
                    <div class="row">
                        <div class="col-sm-4">
                            <strong> Yêu cầu</strong>
                        </div>
                        <div class="col-sm-8">
                            <strong> Nhiệm vụ</strong>
                            <p>
                                - Soạn đầy đủ các giấy tờ chuyển phụ trách.
                            </p>
                        </div>
                    </div>
                </div>
            </fieldset>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {
        });
        function DoVeNextStep(dove_id) {
            var note = $("#txtTrangThaiNote").val();
            $.ajax({
                url: '/Doves/DoVeNextStep',
                data: { dove_id: dove_id, note: note },
                type: "GET",
                dataType: "JSON",
                success: function (rs) {
                    if (rs) {
                        $("#tblTrangThaiDoVe").prepend(rs);
                    }
                }
            });
        }
        function DoVePrevStep(dove_id) {
            var note = $("#txtTrangThaiNote").val();
            $.ajax({
                url: '/Doves/DoVePrevStep',
                data: { dove_id: dove_id, note: note },
                type: "GET",
                dataType: "JSON",
                success: function (rs) {
                    if (rs) {
                        $("#tblTrangThaiDoVe").prepend(rs);
                    }
                }
            });
        }
    </script>
}