@model NiceHandles.Models.AttendanceViewModel
@{
    ViewBag.Title = "Chấm Công";
}

<div class="attendance-container">
    <section class="today-attendance">
        <h2>Chấm công ngày @Model.TodayAttendance.Date.ToString("dd/MM/yyyy")</h2>

        <div class="time-check">
            <div class="morning">
                <button onclick="checkTime('morningIn')">Đến sáng:</button>
                <span class="time-display">
                    @if (Model.TodayAttendance.MorningIn.HasValue)
                    {
                        <input type="time" value="@Model.TodayAttendance.MorningIn.Value.ToString(@"hh\:mm")"
                               onchange="editTime(@Model.TodayAttendance.Id, 'morningIn', this.value)">
                    }
                </span>

                <button onclick="checkTime('morningOut')">Về sáng:</button>
                <span class="time-display">
                    @if (Model.TodayAttendance.MorningOut.HasValue)
                    {
                        <input type="time" value="@Model.TodayAttendance.MorningOut.Value.ToString(@"hh\:mm")"
                               onchange="editTime(@Model.TodayAttendance.Id, 'morningOut', this.value)">
                    }
                </span>
            </div>

            <div class="afternoon">
                <button onclick="checkTime('afternoonIn')">Đến chiều:</button>
                <span class="time-display">
                    @if (Model.TodayAttendance.AfternoonIn.HasValue)
                    {
                        <input type="time" value="@Model.TodayAttendance.AfternoonIn.Value.ToString(@"hh\:mm")"
                               onchange="editTime(@Model.TodayAttendance.Id, 'afternoonIn', this.value)">
                    }
                </span>

                <button onclick="checkTime('afternoonOut')">Về chiều:</button>
                <span class="time-display">
                    @if (Model.TodayAttendance.AfternoonOut.HasValue)
                    {
                        <input type="time" value="@Model.TodayAttendance.AfternoonOut.Value.ToString(@"hh\:mm")"
                               onchange="editTime(@Model.TodayAttendance.Id, 'afternoonOut', this.value)">
                    }
                </span>
            </div>
        </div>

        <div class="working-status">
            <label>Trạng thái:</label>
            <input type="checkbox"
                   id="workingSwitch"
                   @(Model.TodayAttendance.IsWorking ? "checked" : "")
                   onchange="toggleWorking(this.checked)">
            <span>@(Model.TodayAttendance.IsWorking ? "Đang làm" : "Tạm vắng")</span>
        </div>
    </section>

    <section class="attendance-list">
        <h2>Danh sách chấm công</h2>

        <div class="filter">
            @using (Html.BeginForm("Index", "Attendance", FormMethod.Get))
            {
                <select name="month">
                    @for (int i = 1; i <= 12; i++)
                    {
                        <option value="@i" @(Model.SelectedMonth == i ? "selected" : "")>@i</option>
                    }
                </select>
                <select name="year">
                    @for (int i = DateTime.Now.Year - 5; i <= DateTime.Now.Year; i++)
                    {
                        <option value="@i" @(Model.SelectedYear == i ? "selected" : "")>@i</option>
                    }
                </select>
                <button type="submit">Lọc</button>
            }
        </div>

        <table>
            <thead>
                <tr>
                    <th>Ngày</th>
                    <th>Đến sáng</th>
                    <th>Về sáng</th>
                    <th>Đến chiều</th>
                    <th>Về chiều</th>
                    <th>Thời gian tạm vắng</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.MonthlyAttendances)
                {
                    <tr>
                        <td>@item.Date.ToString("dd/MM/yyyy")</td>
                        <td>
                            <input type="time" value="@(item.MorningIn.HasValue ? item.MorningIn.Value.ToString(@"hh\:mm") : "")"
                                   onchange="editTime(@item.Id, 'morningIn', this.value)">
                        </td>
                        <td>
                            <input type="time" value="@(item.MorningOut.HasValue ? item.MorningOut.Value.ToString(@"hh\:mm") : "")"
                                   onchange="editTime(@item.Id, 'morningOut', this.value)">
                        </td>
                        <td>
                            <input type="time" value="@(item.AfternoonIn.HasValue ? item.AfternoonIn.Value.ToString(@"hh\:mm") : "")"
                                   onchange="editTime(@item.Id, 'afternoonIn', this.value)">
                        </td>
                        <td>
                            <input type="time" value="@(item.AfternoonOut.HasValue ? item.AfternoonOut.Value.ToString(@"hh\:mm") : "")"
                                   onchange="editTime(@item.Id, 'afternoonOut', this.value)">
                        </td>
                        <td>
                            @if (item.BreakTimes != null && item.BreakTimes.Any())
                            {
                                foreach (var breakTime in item.BreakTimes)
                                {
                                    <div>
                                        <input type="datetime-local"
                                               value="@breakTime.StartTime.ToString("yyyy-MM-ddTHH:mm")"
                                               onchange="editBreakTime(@breakTime.Id, this.value, $(this).next().val())">
                                        <input type="datetime-local"
                                               value="@(breakTime.EndTime.HasValue ? breakTime.EndTime.Value.ToString("yyyy-MM-ddTHH:mm") : "")"
                                               onchange="editBreakTime(@breakTime.Id, $(this).prev().val(), this.value)">
                                    </div>
                                }
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </section>
</div>

<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script>
    function checkTime(type) {
        $.post('@Url.Action("CheckTime")', { type: type }, function(response) {
            if (response.success) location.reload();
        });
    }

    function toggleWorking(isWorking) {
        $.post('@Url.Action("ToggleWorking")', { isWorking: isWorking }, function(response) {
            if (response.success) location.reload();
        });
    }

    function editTime(id, field, value) {
        $.post('@Url.Action("EditTime")', { id: id, field: field, value: value }, function(response) {
            if (!response.success) alert(response.message || 'Có lỗi xảy ra');
        });
    }

    function editBreakTime(breakId, startTime, endTime) {
        $.post('@Url.Action("EditBreakTime")', {
            breakId: breakId,
            startTime: startTime,
            endTime: endTime
        }, function(response) {
            if (!response.success) alert(response.message || 'Có lỗi xảy ra');
        });
    }
</script>

<style>
    .attendance-container {
        max-width: 1200px;
        margin: 20px auto;
    }

    .today-attendance, .attendance-list {
        border: 1px solid #ddd;
        padding: 20px;
        margin-bottom: 20px;
    }

    .time-check {
        display: flex;
        gap: 20px;
        margin: 10px 0;
    }

    .morning, .afternoon {
        display: flex;
        gap: 10px;
        align-items: center;
    }

    .time-display input[type="time"] {
        width: 80px;
    }

    table {
        width: 100%;
        border-collapse: collapse;
    }

    th, td {
        border: 1px solid #ddd;
        padding: 8px;
    }

    th {
        background-color: #f2f2f2;
    }

    input[type="time"] {
        width: 80px;
    }

    input[type="datetime-local"] {
        width: 160px;
    }

    .filter {
        margin-bottom: 10px;
    }

    .working-status {
        margin-top: 10px;
    }
</style>