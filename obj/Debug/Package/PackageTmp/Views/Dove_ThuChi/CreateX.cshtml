@model NiceHandles.Models.InOut
@using NiceHandles.Models;
@using Microsoft.AspNet.Identity;
@{
    ViewBag.Title = "Thêm mới";
    var db = new NHModel();
    var types = new SelectList(XCategory.sType, "Key", "Value");
    var username = User.Identity.GetUserName();
    var us = db.Accounts.Where(x => x.UserName.Equals(username)).Single();
    Model.account_id = us.id;
    Model.created_by = us.id;
}

<fieldset id="createx">
    @using (Html.BeginForm("Index", "Dove_ThuChi", FormMethod.Post, new { role = "form", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="form-group">
                    @Html.Label("Loại", new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.DropDownListFor(model => model.type, types, "Thu/Chi", new { @class = "form-control", @onchange = "TypeChange();" })
                        @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-2">
                        <select class="form-control" id="inout" onchange="TypeChange();">
                            <option value="@((int)XCategory.eParent.KhachHang)">Trong HĐ</option>
                            <option value="@((int)XCategory.eParent.VanPhong)">Ngoài HĐ</option>
                        </select>
                    </div>
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.contract_id, new SelectList(new Contract[] { }, "contract_id", "name"), "Chọn hợp đồng", new { @class = "form-control" })
                        <i class="text-danger hide validContract_id">Yêu cầu chọn hợp đồng</i>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group">
                    @Html.Label("Người nhận", new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.account_id, new SelectList(ViewBag.ACCOUNTS, "id", "fullname", us.id), "Người thực hiện", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.account_id, "", new { @class = "text-danger" })
                    </div>
                    @Html.Label("Số tiền", new { @class = "control-label col-md-1" })
                    <div class="col-md-3">
                        @*@Html.EditorFor(model => model.amount, new { htmlAttributes = new { @class = "form-control", type = "number", @style = "background-color: antiquewhite;" } })*@
                        @Html.HiddenFor(model => model.amount)
                        @Html.TextBox("msk_amount", Model.amount, new { @class = "form-control numberic", @style = "background-color: antiquewhite;" })
                        @Html.ValidationMessageFor(model => model.amount, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group">
                    @Html.Label("Ghi chú", new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.TextAreaFor(model => model.note, new { @class = "form-control", @rows = 1 })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="button" id="btnShow" value="Thực hiện" onclick="btnSubmitCreateInout();" disabled class="btn btn-primary" />
                        <input type="submit" id="btnSubmit" class="hide" />
                    </div>
                </div>
            </div>
        </div>
    }
</fieldset>
