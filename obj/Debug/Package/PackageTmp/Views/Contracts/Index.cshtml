@model PagedList.IPagedList<NiceHandles.Models.vContract>
@using PagedList.Mvc;
@using NiceHandles.Models

@{
    ViewBag.Title = "Hợp đồng";
    var db = new NHModel();
    var Categories = new SelectListItem[0];
    var ADDRESS = new SelectList(db.Addresses, "id", "name");
    var SERVICES = new SelectList(db.Services, "id", "name");
    var PARTNER = new SelectList(db.Partners.OrderBy(x => x.sothutu), "id", "name");
    var STATUS = new SelectList(XContract.sStatus, "Key", "Value");
    var STEP = new SelectList(db.Steps.OrderBy(x => x.sort), "id", "name");
    var ACCOUNTS = new SelectList(db.Accounts.Where(x => x.sta == (int)XAccount.eStatus.Processing), "id", "fullname");
    var LOAI = new SelectList(XContract.sLoai, "Key", "Value");

    var cateRose = db.Categories.Single(x => x.kind == (int)XCategory.eKind.Rose);
    var cateDove = db.Categories.Single(x => x.kind == (int)XCategory.eKind.Dove);
    var cateRemunerate = db.Categories.Single(x => x.kind == (int)XCategory.eKind.Remunerate);
    var catePartner = db.Categories.Single(x => x.kind == (int)XCategory.eKind.Partner);
    //// Sum
    //var SumGiaTriHopDong = (long)ViewBag.SumGiaTriHopDong;
    //var SumDaThu = (long)ViewBag.SumDaThu;
    //var SumPhaiThu = (long)ViewBag.SumPhaiThu;
    //var SumDuChi = (long)ViewBag.SumDuChi;
    //var SumHoaHongNV = (long)ViewBag.SumHoaHongNV;
    //var SumHoaHongDT = (long)ViewBag.SumHoaHongDT;
    //var SumDaChi = (long)ViewBag.SumDaChi;
    //var SumDaThuNet = (long)ViewBag.SumDaThuNet;
    //var SumDuThuNet = (long)ViewBag.SumDuThuNet;
    //Total
    var summery = db.Contracts.Select(x => new { x.id, x.amount, x.consuming, x.dove, x.outrose, x.rose }).ToList();
    var TotalGiaTriHopDong = summery.Sum(x => x.amount);
    var summeryInout = (from s in summery
                        join io in db.InOuts on s.id equals io.contract_id
                        where io.status == (int)XInOut.eStatus.DaThucHien
                        select new { io.amount, io.type, io.category_id }).ToList();
    var TotalDuChi = summery.Sum(x => x.consuming);
    var TotalDaThu = summeryInout.Where(x => x.type == (int)XCategory.eType.Thu).Sum(x => x.amount);
    var TotalPhaiThu = TotalGiaTriHopDong - TotalDaThu;
    var TotalDaChi = summeryInout.Where(x => x.type == (int)XCategory.eType.Chi).Sum(x => x.amount);
    var TotalDaThuNet = TotalDaThu - TotalDaChi;
    var TotalDuThuNet = TotalGiaTriHopDong - TotalDuChi;
    var servicesNotRemunerate = db.Services.Where(x => x.code.Equals("chuyennhuong") || x.code.Equals("dove") || x.code.Equals("dinhchinh")).Select(x => x.id);
}

<h2>
    Quản Lý Hợp đồng
    @Html.ActionLink("Thêm mới", "Create", null, new { @class = "btn btn-success" })
    @Html.ActionLink("Quản lý thu chi", "index", "InOuts", null, new { @class = "btn btn-danger" })
</h2>

@using (Html.BeginForm("Index", "Contracts", FormMethod.Get))
{
    <div class="row">
        <div class="col-md-8">
            <div class="row">
                <div class="col-sm-1">
                    <div class="form-group">
                        @Html.TextBox("fromdate", ViewBag.FROMDATE as string, new { @class = "form-control datetime", placeholder = "Từ ngày", autocomplete = "off" })
                    </div>
                </div>
                <div class="col-sm-1">
                    <div class="form-group">
                        @Html.TextBox("todate", ViewBag.TODATE as string, new { @class = "form-control datetime", placeholder = "Đến ngày", autocomplete = "off" })
                    </div>
                </div>
                <div class="col-sm-1">
                    <div class="form-group">
                        @Html.DropDownList("par", PARTNER, "Đối tác", new { @class = "form-control", title = "Đối tác" })
                    </div>
                </div>
                <div class="col-sm-1">
                    <div class="form-group">
                        @Html.DropDownList("add", ADDRESS, "Địa chỉ", new { @class = "form-control", title = "Địa chỉ" })
                    </div>
                </div>
                <div class="col-sm-1">
                    <div class="form-group">
                        @Html.DropDownList("ser", SERVICES, "Dịch vụ", new { @class = "form-control", title = "Dịch vụ" })
                    </div>
                </div>
                <div class="col-sm-1">
                    <div class="form-group">
                        @Html.DropDownList("acc", ACCOUNTS, "Phụ trách", new { @class = "form-control", title = "Phụ trách" })
                    </div>
                </div>
                <div class="col-sm-1">
                    <div class="form-group">
                        @Html.DropDownList("loai", LOAI, "Loại", new { @class = "form-control", title = "Loại" })
                    </div>
                </div>
                <div class="col-sm-1">
                    <div class="form-group">
                        @Html.DropDownList("hh", ACCOUNTS, "Hoa hồng", new { @class = "form-control", title = "Hoa hồng nhân viên" })
                    </div>
                </div>
                <div class="col-sm-1">
                    <div class="form-group">
                        @Html.TextBox("Search_Data", ViewBag.FilterValue as string, new { @class = "form-control", placeholder = "Tìm kiếm" })
                    </div>
                </div>
                <div class="col-lg-1">
                    <div class="form-group">
                        <button type="submit" class="btn btn-info" style="height: 32px; width: 100px;">Tìm kiếm</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="row">
                <div class="col-md-2" title="GTHĐ là tổng giá trị hợp đồng ký với khách hàng, không bao gồm thuế VAT hoặc TNCN">
                    <label><i class="fa fa-solid fa-sigma"></i> GTHĐ: </label><br />
                    @TotalGiaTriHopDong.ToString("N0")
                </div>
                <div class="col-md-2 text-success" title="Là các khoản khách hàng đã nộp tới hiện tại">
                    <label><i class="fa fa-solid fa-sigma"></i> Đã Thu:</label> <br />
                    @TotalDaThu.ToString("N0")
                </div>
                <div class="col-md-2" title="Giá trị hợp đồng - đã thu">
                    <label><i class="fa fa-solid fa-sigma"></i> Phải thu: </label> <br />
                    @TotalPhaiThu.ToString("N0")
                </div>
                <div class="col-md-2 text-danger" title="Đã chi là tổng các khoản chi cho hồ sơ đến hiện tại">
                    <label><i class="fa fa-solid fa-sigma"></i> Đã chi: </label><br />
                    @TotalDaChi.ToString("N0")
                </div>
                <div class="col-md-2 text-primary" title="Đã thu - đã chi">
                    <label><i class="fa fa-solid fa-sigma"></i> Đã thu NET: </label><br />
                    @TotalDaThuNet.ToString("N0")
                </div>
                <div class="col-md-2 text-warning" title="Giá trị hợp đồng - dự chi">
                    <label><i class="fa fa-solid fa-sigma"></i> Dự thu NET: </label><br />
                    @TotalDuThuNet.ToString("N0")
                </div>
            </div>
        </div>
    </div>
}
<div class="tableFixHead">
    <table class="table table-hover">
        <thead>
            @*<tr>
                    <td colspan="7"></td>
                    <td><i class="fa fa-solid fa-sigma"></i></td>
                    <td>@SumGiaTriHopDong.ToString("N0")</td>
                    <td class="text-success">@SumDaThu.ToString("N0")</td>
                    <td>@SumPhaiThu.ToString("N0")</td>
                    <td class="text-danger">@SumDuChi.ToString("N0")</td>
                    <td class="text-warning">@SumHoaHongNV.ToString("N0")</td>
                    <td class="text-warning">@SumHoaHongDT.ToString("N0")</td>
                    <td></td>
                    <td></td>
                    <td class="text-danger">@SumDaChi.ToString("N0")</td>
                    <td class="text-success">@SumDaThuNet.ToString("N0")</td>
                    <td class="text-success">@SumDuThuNet.ToString("N0")</td>
                    <td></td>
                </tr>*@
            <tr>
                <th>Ngày ký</th>
                <th>Số HĐ</th>
                <th>File HĐ</th>
                <th>Tên K.Hàng</th>
                <th>Đối tác</th>
                <th>Địa chỉ</th>
                <th>Dịch vụ</th>
                @*<th>P.Trách</th>*@
                <th>Loại</th>
                <th>Giá trị HĐ</th>
                <th>Đã thu</th>
                <th>Phải thu</th>
                <th>Dự chi</th>
                <th>HH NV</th>
                <th>HH ĐT</th>
                @*<th>ĐM Đo đạc</th>
                    <th>ĐM T.Hiện</th>*@
                <th>Đã chi</th>
                <th>Đã thu NET</th>
                <th>Dự thu NET</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                var inoutsInContract = db.InOuts.Where(x => x.contract_id == item.id && x.status < (int)XInOut.eStatus.Huy).Select(x => new { x.type, x.amount, x.category_id, x.status }).ToArray();
                var temp = inoutsInContract.Where(x => x.status == (int)XInOut.eStatus.DaThucHien);
                var taked_amount = temp != null ? temp.Where(x => x.type == (int)XCategory.eType.Thu).Sum(x => x.amount) : 0;
                var spent_amount = temp != null ? temp.Where(x => x.type == (int)XCategory.eType.Chi).Sum(x => x.amount) : 0;
                var profit_amount = taked_amount - spent_amount;
                var fullname = item.fullname.Split(new string[] { " " }, StringSplitOptions.RemoveEmptyEntries);

                <tr id="ctr@(item.id)" style="background-color: @(item.consuming < spent_amount ? "khaki" : "none");">
                    <td>@item.time.ToString("dd/MM/yy")</td>
                    <td>@item.code</td>
                    <td id="contract@(item.id)">
                        @if (string.IsNullOrEmpty(item.HardFileLink))
                        {
                            <a class="view aHardFile fa fa-eye text-danger" href="#">No File</a>
                        }
                        else
                        {
                            <a class="view aHardFile fa fa-eye" href="@item.HardFileLink" target="_blank">Xem file</a>
                        }
                        @*|<a class="fa fa-save" onclick="HardFileUpdate(@item.id)"> Sửa file</a>*@
                    </td>
                    <td>
                        @Html.ActionLink(item.name, "Details", new { id = item.id })
                    </td>
                    <td>
                        @item.partner_name
                    </td>
                    <td>                @item.address_name            </td>
                    <td>                @item.service_name </td>
                    @*<td>                @Html.Raw(fullname.First() + " " + fullname.Last()) </td>*@
                    <td>                @XContract.sLoai[item.loai] </td>
                    <td style="text-align: right;">@item.amount.ToString("N0")</td>
                    <td class="text-success" onclick="ShowInOut(@item.id, @((int)XCategory.eType.Thu))" style="text-align: right;">
                        @taked_amount.ToString("N0")
                    </td>
                    <td style="text-align: right;">                @((item.amount - taked_amount).ToString("N0"))            </td>
                    <td style="text-align: right;">
                        @item.consuming.ToString("N0")
                        <br />
                        @Html.ActionLink("Trình duyệt", "TrinhDuyetChi", new { id = item.id }, new { @class = "btn btn-warning", @target = "_blank" })
                    </td>
                    <td class="text-danger" style="text-align: right;">
                        @if (item.rose > 0)
                        {
                            var inouts = inoutsInContract.Where(x => x.category_id == cateRose.id);
                            if (inouts.Count() > 0)
                            {
                                var sum = inouts.Sum(x => x.amount);
                                @sum.ToString("N0")
                                <br />
                                if (inouts.Any(x => x.status == (int)XInOut.eStatus.ChoDuyet))
                                {
                                    <button class="btn btn-info">Chờ duyệt</button>
                                }
                                else if (inouts.Any(x => x.status == (int)XInOut.eStatus.DaDuyet))
                                {
                                    <button class="btn btn-primary">Đã duyệt</button>
                                }
                                else
                                {
                                    <button class="btn btn-default">Đã thực hiện</button>
                                }
                            }
                            else
                            {
                                @item.rose.ToString("N0")
                                <br />
                                <button class="btn btn-warning" onclick="TrinhDuyet(@item.id,@cateRose.id);">Trình duyệt</button>
                            }
                        }
                    </td>
                    <td class="text-danger" style="text-align: right;">
                        @if (item.outrose > 0)
                        {
                            var inouts = inoutsInContract.Where(x => x.category_id == catePartner.id);
                            if (inouts.Count() > 0)
                            {
                                var sum = inouts.Sum(x => x.amount);
                                @sum.ToString("N0")
                                <br />
                                if (inouts.Any(x => x.status == (int)XInOut.eStatus.ChoDuyet))
                                {
                                    <button class="btn btn-info">Chờ duyệt</button>
                                }
                                else if (inouts.Any(x => x.status == (int)XInOut.eStatus.DaDuyet))
                                {
                                    <button class="btn btn-primary">Đã duyệt</button>
                                }
                                else if (sum < item.outrose)
                                {
                                    <button class="btn btn-warning" onclick="TrinhDuyet(@item.id,@catePartner.id);">T.Duyệt L2</button>
                                }
                                else
                                {
                                    <button class="btn btn-default">Đã thực hiện</button>
                                }
                            }
                            else
                            {
                                @item.outrose.ToString("N0")
                                <br />
                                <button class="btn btn-warning" onclick="TrinhDuyet(@item.id,@catePartner.id);">Trình duyệt</button>
                            }
                        }
                    </td>
                    @*<td class="text-danger" style="text-align: right;">
                            @if (item.dove > 0)
                            {
                                var inouts = inoutsInContract.Where(x => x.category_id == cateDove.id);
                                if (inouts.Count() > 0)
                                {
                                    var sum = inouts.Sum(x => x.amount);
                                    @sum.ToString("N0")
                                    <br />
                                    if (inouts.Any(x => x.status == (int)XInOut.eStatus.ChoDuyet))
                                    {
                                        <button class="btn btn-info">Chờ duyệt</button>
                                    }
                                    else if (inouts.Any(x => x.status == (int)XInOut.eStatus.DaDuyet))
                                    {
                                        <button class="btn btn-primary">Đã duyệt</button>
                                    }
                                    else
                                    {
                                        <button class="btn btn-default">Đã thực hiện</button>
                                    }
                                }
                                else
                                {
                                    @item.dove.ToString("N0")
                                    <br />
                                    <button class="btn btn-warning" onclick="TrinhDuyet(@item.id,@cateDove.id);">Trình duyệt</button>
                                }
                            }
                        </td>*@
                    @*<td class="text-danger" style="text-align: right;">
                            @{
                                var inoutsRemunerate = inoutsInContract.Where(x => x.category_id == cateRemunerate.id);
                            }
                            @if (inoutsRemunerate.Count() > 0)
                            {
                                var sum = inoutsRemunerate.Sum(x => x.amount);
                                @sum.ToString("N0")
                                <br />
                                if (inoutsRemunerate.Any(x => x.status == (int)XInOut.eStatus.ChoDuyet))
                                {
                                    <button class="btn btn-info">Chờ duyệt</button>
                                }
                                else if (inoutsRemunerate.Any(x => x.status == (int)XInOut.eStatus.DaDuyet))
                                {
                                    <button class="btn btn-primary">Đã duyệt</button>
                                }
                                else
                                {
                                    <button class="btn btn-default">Đã thực hiện</button>
                                }
                            }
                            else
                            {
                                var hoso = db.HoSoes.FirstOrDefault(x => x.contract_id == item.id && x.service_id == item.service_id);
                                if (hoso != null)
                                {
                                    if (!servicesNotRemunerate.Contains(item.service_id))
                                    {
                                        if (hoso.step_id == (int)XHoSo.eStep.DaHoanTat || hoso.step_id == (int)XHoSo.eStep.Nop1Cua)
                                        {
                                            <span>1.000.000</span>
                                            <br />
                                            <button class="btn btn-warning" onclick="TrinhDuyet(@item.id,@cateRemunerate.id);">Trình duyệt</button>
                                        }
                                        else
                                        {
                                            <span>1.000.000</span>
                                            <br />
                                            <button class="btn btn-warning" disabled onclick="TrinhDuyet(@item.id,@cateRemunerate.id);">Trình duyệt</button>
                                        }
                                    }
                                }
                            }
                        </td>*@
                    <td onclick="ShowInOut(@item.id, @((int)XCategory.eType.Chi))" style="text-align: right;">
                        @spent_amount.ToString("N0")
                    </td>
                    <td style="text-align: right;">
                        @profit_amount.ToString("N0")
                    </td>
                    <td style="text-align: right;">
                        @((item.amount - item.consuming).ToString("N0"))
                    </td>
                    <td>
                        @if (item.status == (int)XContract.eStatus.Processing)
                        {
                            <a href="#" style="background-color: aliceblue; color: deeppink;" onclick="DuyetChi(@item.id,null);">Thu chi</a>
                            @Html.Raw(" |")
                            @Html.ActionLink("Sửa", "Edit", new { id = item.id })
                            @Html.Raw(" |")
                            @Html.ActionLink("Xóa", "Delete", new { id = item.id })
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
@if (Model.PageCount > 1)
{
    <div class="row" style="margin-top: 10px;">
        <div class="col-sm-1">
            Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount
        </div>
        <div class="col-sm-10">
            @Html.PagedListPager(Model, Page_No => Url.Action("Index", new
       {
           Page_No,
           Filter_Value = ViewBag.FilterValue,
           add = ViewBag.ADD,
           acc = ViewBag.ACC,
           ser = ViewBag.SER,
           par = ViewBag.PAR,
           sta = ViewBag.STA,
           loai = ViewBag.LOAI,
           hh = ViewBag.HH,
           fromdate = ViewBag.FROMDATE,
           todate = ViewBag.TODATE
       }))
        </div>
    </div>
}
@Html.Partial("../Shared/Modals/_InOutDetail")
@*@Html.Partial("_ModalHardFileUpdate")*@
@Html.Partial("_ModalCreateDuyetChi")

<style>
    .tableFixHead {
        overflow: auto;
        height: 1000px;
    }

        .tableFixHead thead th {
            position: sticky;
            top: 0;
            z-index: 1;
        }

    table {
        border-collapse: collapse;
        width: 100%;
    }

    th, td {
        padding: 8px 16px;
    }

    th {
        background: #eee;
    }


    table .btn {
        padding: 4px 6px 2px;
    }

    table .form-control {
        font-size: 12px;
    }

    .col-md-8 .col-sm-1, .col-md-4 .col-md-2 {
        padding-right: 5px;
        padding-left: 5px;
    }
</style>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $(".datetime").datepicker({
                "autoclose": true,
                "todayHighlight": true,
                "dateFormat": "dd/mm/yyyy",
                "format": "dd/mm/yyyy",
            });
            $('#mdlCreateDuyetChi').on('hidden.bs.modal', function () {
                location.reload();
            });
        });
        function TrinhDuyet(contract_id, category_id) {
            $.ajax({
                url: '/InOuts/TrinhDuyet',
                type: "POST",
                dataType: "JSON",
                data: { contract_id: contract_id, category_id: category_id },
                success: function (id) {
                    location.reload();
                }
            });
        }
    </script>
}
