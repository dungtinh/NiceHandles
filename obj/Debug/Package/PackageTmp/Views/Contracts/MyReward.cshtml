@model PagedList.IPagedList<NiceHandles.Models.vMyReward>
@using PagedList.Mvc;
@using NiceHandles.Models

@{
    ViewBag.Title = "DS hồ sơ vào 1 cửa";
    var db = (NiceHandles.Models.NHModel)ViewBag.db;
    //var accounts = db.Accounts.Where(x => x.hasNote == (int)XModels.eYesNo.Yes).ToArray();
    var cateRemunerate = db.Categories.Single(x => x.kind == (int)XCategory.eKind.Remunerate);
    var cateDove = db.Categories.Single(x => x.kind == (int)XCategory.eKind.Dove);
}

<br />

<h2>DS hồ sơ nhận thưởng</h2>
@using (Html.BeginForm("MyReward", "Contracts", FormMethod.Get))
{
    <div class="row">
        <div class="col-sm-2">
            <div class="form-group">
                @Html.TextBox("Search_Data", ViewBag.FilterValue as string, new { @class = "form-control", placeholder = "Tìm kiếm" })
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                @Html.DropDownList("acc", ViewBag.ACCOUNTS as SelectList, "--- Tài khoản ---", new { @class = "form-control", title = "Tài khoản" })
            </div>
        </div>
        <div class="col-lg-2">
            <div class="form-group">
                <button type="submit" class="btn btn-danger" style="height: 32px; width: 100px;">Tìm kiếm</button>
            </div>
        </div>
    </div>
}

<table class="table table-hover" id="blv">
    <thead>
        <tr>
            <th>
                Tên khách hàng
            </th>
            <th>
                Dịch vụ
            </th>
            <th>
                Địa chỉ
            </th>
            <th>
                Phụ trách
            </th>
            <th>
                Ngày nộp
            </th>
            <th>
                Ngày hoàn thành
            </th>
            <th>
                Thưởng thực hiện
            </th>
            <th>
                Thưởng đo vẽ
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            var href = string.Empty;
            href = "<a href='/Contracts/details/" + item.contract_id + "'>" + item.customer_name + "</a>";

            var ioPhuTrach = db.InOuts.Where(x => x.contract_id == item.contract_id && x.category_id == cateRemunerate.id && x.status != (int)XInOut.eStatus.Huy);
            var ioDoVe = db.InOuts.Where(x => x.contract_id == item.contract_id && x.category_id == cateDove.id && x.status != (int)XInOut.eStatus.Huy);

            <tr>
                <td>
                    @Html.Raw(href)
                </td>
                <td>
                    @item.service_name
                </td>
                <td>
                    @item.address_name
                </td>
                <td>
                    @item.fullname
                </td>
                <td>
                    @item.ngaynop.ToString("dd/MM/yyyy")
                </td>
                <td>
                    @if (item.status == (int)XHoSo.eStatus.Complete)
                    {
                        @item.time.ToString("dd/MM/yy")
                    }
                    else
                    {
                        @Html.Raw("---")
                    }
                </td>
                <td>
                    @if (User.IsInRole("SuperAdmin") && ioPhuTrach.Count() == 0)
                    {
                        if (item.remunerate > 0)
                        {
                            <button class="btn btn-warning" onclick="DuyetChi(@item.id);"> @item.remunerate.ToString("N0") </button>
                        }
                        else
                        {
                            @Html.Raw("Không thưởng");
                        }
                    }
                    else
                    {
                        <span class="text-muted"> @ioPhuTrach.Sum(x => x.amount).ToString("N0") </span>
                    }
                </td>
                <td>
                    @if (User.IsInRole("SuperAdmin") && ioDoVe.Count() == 0)
                    {
                        if (item.dove > 0)
                        {
                            <button class="btn btn-warning" onclick="DuyetChiDoVe(@item.id);"> @item.dove.ToString("N0") </button>
                        }
                        else
                        {
                            @Html.Raw("Không thưởng")
                        }
                    }
                    else
                    {
                        <span class="text-muted"> @ioDoVe.Sum(x => x.amount).ToString("N0") </span>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
@if (Model.PageCount > 1)
{
    <div class="row" style="margin-top: 10px;">
        <div class="col-sm-1">
            Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount
        </div>
        <div class="col-sm-10">
            @Html.PagedListPager(Model, Page_No => Url.Action("MyReward", new
       {
           Page_No,
           Filter_Value = ViewBag.FilterValue,
           acc = ViewBag.ACC
       }))
        </div>
    </div>
}
<iframe id="my_iframe" style="display:none;"></iframe>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {
        });
        function DuyetChi(id) {
            $.ajax({
                url: '/Contracts/DuyetChiPhuTrach',
                type: "GET",
                dataType: "JSON",
                data: { id: id },
                success: function (flag) {
                    location.href = document.location.href;
                }
            });
        }
        function DuyetChiDoVe(id) {
            $.ajax({
                url: '/Contracts/DuyetChiDoVe',
                type: "GET",
                dataType: "JSON",
                data: { id: id },
                success: function (flag) {
                    location.href = document.location.href;
                }
            });
        }
    </script>
}