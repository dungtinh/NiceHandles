@model PagedList.IPagedList<NiceHandles.Models.vTheoDoiTienDo>
@using PagedList.Mvc;
@using NiceHandles.Models

@{
    ViewBag.Title = "Theo dõi tiến độ";
    var db = new NHModel();
    var steps = db.Steps.Where(x => !x.code.Equals("THANHCONG")).OrderBy(x => x.sort).ToArray();
}

<h2>
    Theo dõi tiến độ
    @Html.ActionLink("Cài đặt thời gian", "ProgressConfig", null, new { @class = "btn btn-primary", @style = "float: right;" })
</h2>

<div class="row">
    @foreach (var item in Common.cAccounts())
    {
        var SumContracts = db.Contracts.Where(x => x.account_id == item.id && x.status == (int)XContract.eStatus.Processing && x.amount > 0).Select(x => x.exp).ToArray();
        var total = SumContracts.Count();
        var slow = SumContracts.Count(x => x < DateTime.Now);
        <div class="col-sm-2">
            <label>@(item.fullname): <span class='text-danger'>@slow</span>/@total</label>
        </div>
    }
</div>

@using (Html.BeginForm("TheoDoiTienDo", "Contracts", FormMethod.Get))
{
    <div class="row">
        <div class="col-sm-1">
            <div class="form-group">
                @Html.TextBox("Search_Data", ViewBag.FilterValue as string, new { @class = "form-control", placeholder = "Tìm kiếm" })
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                @Html.DropDownList("uq", ViewBag.UYQUYENS as SelectList, "--- Phụ trách ---", new { @class = "form-control", title = "Người thực hiện" })
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                @Html.DropDownList("ste", ViewBag.STEPS as SelectList, "--- Bước thực hiện ---", new { @class = "form-control", title = "Bước thực hiện" })
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                @Html.DropDownList("add", ViewBag.ADDRESS as SelectList, "--- Địa chỉ ---", new { @class = "form-control", title = "Địa chỉ" })
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                @Html.DropDownList("ser", ViewBag.SERVICES as SelectList, "--- Dịch vụ ---", new { @class = "form-control", title = "Dịch vụ" })
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                @Html.DropDownList("par", ViewBag.PARTNER as SelectList, "--- Đối tác ---", new { @class = "form-control", title = "Đối tác" })
            </div>
        </div>
        <div class="col-sm-1">
            <div class="form-group">
                <button type="submit" class="btn btn-danger" style="height: 32px; width: 100px;">Tìm kiếm</button>
            </div>
        </div>
    </div>
}
<table class="table table-hover">
    <tr>
        <th>
            Hồ sơ
        </th>
        <th>
            Phụ trách
        </th>
        @foreach (var item in steps)
        {
            <th>
                @item.name
            </th>
        }
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.ActionLink(item.customer_name, "Details", new { id = item.id })
            </td>
            <td>
                @Html.ActionLink(item.fullname, "Details", new { id = item.id })
            </td>
            @foreach (var perStep in steps)
            {
                var style = "";
                double dayInStep = 0;
                var firstDay = db.wf_contract.Where(x => x.contract_id == item.id && x.step_id == perStep.id).OrderBy(x => x.time).FirstOrDefault();
                var lastDay = db.wf_contract.Where(x => x.contract_id == item.id && x.step_id == perStep.next).OrderBy(x => x.time).FirstOrDefault();
                if (firstDay != null)
                {
                    if (lastDay != null)
                    {
                        dayInStep = (lastDay.time - firstDay.time).TotalDays;
                    }
                    else
                    {
                        dayInStep = (DateTime.Now - firstDay.time).TotalDays;
                    }
                }
                var servicestepday = db.service_step_day.SingleOrDefault(x => x.service_id == item.service_id && x.step_id == perStep.id);
                if (servicestepday == null)
                {
                    servicestepday = new service_step_day() { red = 10, yellow = 7 };
                }
                if (item.step == perStep.id)
                {
                    if (dayInStep >= servicestepday.red)
                    {
                        style = "background-color: #d9534f; color: white;";
                    }
                    else if (dayInStep >= servicestepday.yellow)
                    {
                        style = "background-color: #f0ad4e; color: white;";
                    }
                    else if (dayInStep > 0)
                    {
                        style = "background-color: #337ab7; color: white;";
                    }
                }
                <td style="border-left: 1px solid #ddd;@Html.Raw(style)">
                    @Html.Raw(dayInStep > 0 ? ((int)dayInStep).ToString("N0") : "")
                </td>
            }
        </tr>
    }
</table>
@if (Model.PageCount > 1)
{
    <div class="row" style="margin-top: 10px;">
        <div class="col-sm-1">
            Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount
        </div>
        <div class="col-sm-10">
            @Html.PagedListPager(Model, Page_No => Url.Action("TheoDoiTienDoX", new { Page_No, Filter_Value = ViewBag.FilterValue, add = ViewBag.ADD, uq = ViewBag.UQ, ser = ViewBag.SER, par = ViewBag.PAR, ste = ViewBag.STEP }))
        </div>
    </div>
}
