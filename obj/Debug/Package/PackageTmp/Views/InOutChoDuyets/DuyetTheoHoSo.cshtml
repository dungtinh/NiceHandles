@model IEnumerable<NiceHandles.Models.InOut>
@using NiceHandles.Models
@using Microsoft.AspNet.Identity;
@{
    var styleEmpty = "";
    if (Request["l"] != null)
    {
        styleEmpty = "width: 95%;";
        Layout = "~/Views/Shared/_LayoutEmpty.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    ViewBag.Title = "Duyệt chi theo hồ sơ";
    var db = new NHModel();
    var types = new SelectList(XCategory.sType, "Key", "Value");
    var username = User.Identity.GetUserName();
    var us = db.Accounts.Where(x => x.UserName.Equals(username)).Single();
    var lstInOutDaDuyet = Model.Where(x => x.status == (int)XInOut.eStatus.DaDuyet).ToArray();
    var SumAllDaDuyet = lstInOutDaDuyet.Length > 0 ? lstInOutDaDuyet.Sum(x => x.amount) : 0;
    var accs = db.Accounts.ToArray();

    var lstInOutChoDuyetTrongHD = Model.Where(x => x.status == (int)XInOut.eStatus.ChoDuyet && x.contract_id.HasValue && x.unlock == 0).ToArray();
    var index = 0;
}
<h3>
    @Html.ActionLink("DANH SÁCH CHỜ DUYỆT", "choduyet") | CHỜ DUYỆT THEO HỒ SƠ | @Html.ActionLink("DANH SÁCH CHỜ XEM XÉT", "choxemxet") | @Html.ActionLink("THEO DÕI THỰC HIỆN", "theodoichi", null, new { @target = "_blank" })
</h3>

<div style="padding: 10px; background-color: aliceblue;">
    <h4 class="fa fa-list"> DANH SÁCH CHI TRONG HỢP ĐỒNG CHỜ LÃNH ĐẠO DUYỆT</h4>
    <table class="table table-hover table-striped">
        <thead>
            <tr>
                <th>
                    STT
                </th>
                <th>
                    Địa chỉ
                </th>
                <th>
                    Dịch vụ
                </th>
                <th>
                    Giá trị HĐ
                </th>
                <th>
                    Đã thu
                </th>
                <th>
                    Phải thu
                </th>
                <th>
                    Dự chi
                </th>
                <th>
                    Đã chi
                </th>
                <th>
                    Ngày ký
                </th>
                <th>
                    Ngày nộp 1c
                </th>
                <th>
                    Người lĩnh/TH
                </th>
                <th>
                    Loại chi tiết
                </th>
                <th>
                    Số tiền
                </th>
                <th>
                    Ghi chú
                </th>
                <th>
                    Xem xét
                </th>
                <th>
                    Tác vụ
                </th>
            </tr>
        </thead>
        <tbody id="ioinct">
            @{
                var ioGrpByContract = lstInOutChoDuyetTrongHD.GroupBy(x => x.contract_id);
                foreach (var item in ioGrpByContract)
                {
                    var contract = db.Contracts.Find(item.Key);
                    var address = db.Addresses.Find(contract.address_id);
                    var service = db.Services.Find(contract.service_id);
                    string NgayNop1Cua = string.Empty;
                    var hoso = db.HoSoes.FirstOrDefault(x => x.service_id == contract.service_id);
                    if (hoso != null)
                    {
                        var di1cua = db.di1cua.Where(x => x.hoso_id == hoso.id).OrderByDescending(x => x.ngaynop).FirstOrDefault();
                        if (di1cua != null)
                        {
                            NgayNop1Cua = di1cua.ngaynop.ToString("dd/MM/yyyy");
                        }
                    }
                    var summeryInout = (from io in db.InOuts
                                        where io.status == (int)XInOut.eStatus.DaThucHien && io.contract_id == contract.id
                                        select new { io.amount, io.type, io.category_id }).ToList();
                    var TotalDaThu = summeryInout.Where(x => x.type == (int)XCategory.eType.Thu).Sum(x => x.amount);
                    var TotalPhaiThu = contract.amount - TotalDaThu;
                    var TotalDaChi = summeryInout.Where(x => x.type == (int)XCategory.eType.Chi).Sum(x => x.amount);
                    bool flag = true;
                    foreach (var perIo in item)
                    {
                        index++;
                        var acc = accs.Single(x => x.id == perIo.account_id);
                        var cate = db.Categories.Find(perIo.category_id);

                        if (flag)
                        {
                            flag = false;
                            <tr>
                                <td colspan="17"><strong><i> @contract.name </i></strong> <button class="btn btn-danger" onclick="DuyetAllTrongHDById(@contract.id)" style="width:80px">Duyệt All</button></td>
                            </tr>
                        }
                        <tr id="@("ioinct" + perIo.id)" class="byid@(contract.id)">
                            <td style="text-align: center;">@index</td>
                            <td>@address.name</td>
                            <td>@service.name</td>
                            <td style="text-align: right;">@contract.amount.ToString("N0")</td>
                            <td style="text-align: right;">@TotalDaThu.ToString("N0")</td>
                            <td style="text-align: right;">@TotalPhaiThu.ToString("N0")</td>
                            <td style="text-align: right;">@contract.consuming.ToString("N0")</td>
                            <td style="text-align: right;" onclick="ShowInOut(@perIo.contract_id, @((int)XCategory.eType.Chi))">@TotalDaChi.ToString("N0")</td>
                            <td>@contract.time.ToString("dd/MM/yyyy")</td>
                            <td>@NgayNop1Cua</td>
                            <td>@acc.disname</td>
                            <td>@(cate != null ? cate.name : "Danh mục đã bị xóa")</td>
                            <td style="text-align: right;">@((perIo.type == (int)XCategory.eType.Chi ? "-" : null) + perIo.amount.ToString("N0"))</td>
                            <td>@perIo.note</td>
                            <td>
                                @Html.ActionLink("Duyệt", "Duyet", "InOuts", new { id = perIo.id }, new { @class = "btn btn-primary", @style = "width:80px" })
                            </td>
                            <td>
                                @Html.ActionLink("Chuyển", "ChuyenXemXet", "InOuts", new { id = perIo.id }, new { @class = "btn btn-warning" })
                            </td>
                            <td>
                                @Html.ActionLink("Hủy", "Cancel", "InOuts", new { id = perIo.id, ac = "ChoDuyet", con = "InOutChoDuyets" }, new { @class = "text-danger" })
                            </td>
                        </tr>
                    }
                }
            }
        </tbody>
    </table>
</div>

<div id="password" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" style="float: left;">Nhập mật khẩu</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Yêu cầu xác nhận hành động, vui lòng nhập mật khẩu</p>
                <input type="password" class="form-control" id="txtPassword" />
                <i class="text-danger hide forPassword">Sai mật khẩu</i>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" onclick="confirmed()">Chấp nhận</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
@Html.Partial("../Shared/Modals/_InOutDetail")
<iframe id="my_iframe" style="display:none; padding: 10px;"></iframe>
@if (Request["l"] != null)
{
    <style>
        body {
            padding-top: 15px;
        }
    </style>
}
@section Style {
    @* .tableFixHead          { overflow: auto; height: 100px; }
        .tableFixHead thead th { position: sticky; top: 0; z-index: 1; }

        /* Just common table stuff. Really. */
        table  { border-collapse: collapse; width: 100%; }
        th, td { padding: 8px 16px; }
        th     { background:#eee; } *@
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $(".datetime").datepicker({
                "autoclose": true,
                "todayHighlight": true,
                "dateFormat": "dd/mm/yyyy",
                "format": "dd/mm/yyyy",
            }).datepicker();
            $("#cboAll").click(function () {
                $('.table input:checkbox').not(this).prop('checked', this.checked);
            });
        });
        function setCheckedIds() {
            var lst = "";
            $("td input:checked").each(function () {
                lst += $(this).attr("id") + ",";
            });
            $("#checkedids").val(lst);
        }
        function ThucHien() {
            if ($("td input:checked").length == 0) {
                toastr.error("Chưa chọn bản ghi nào", "Lỗi thực hiện", { timeOut: 5000 });
            }
            else {
                $("#password").modal("show");
            }
            return false;
        }
        function confirmed() {
            var pass = $("#txtPassword").val();
            if (pass == "@Html.Raw(NiceHandles.Models.XModels.Password)") {
                var lst = [];
                $("td input:checked").each(function () {
                    var obj = new Object();
                    var currenry = $("#cboCurrency", $(this).parent().parent()).val();
                    obj.id = $(this).attr("id").replace("io", "");
                    obj.currency = currenry;
                    lst.push(obj);
                });
                var note = $("#txtNote").val();
                var objP = new Object();
                objP.note = note;
                $.ajax({
                    url: '/InOutChoDuyets/CreatePhieuThuChi',
                    type: "POST",
                    dataType: "JSON",
                    data: { inOutChoDuyet: objP, lstInOuts: lst },
                    success: function (id) {
                        location.reload();
                    }
                });
                $("#password").modal("hide");
            } else {
                $(".forPassword").removeClass("hide");
            }
        }
        function FillCategory() {
            var cate = $('#type').val();
            if (!cate || cate == "") {
                $("#category_id").html($('<option></option>').val("").html("Loại chi tiết"));
            }
            else {
                $.ajax({
                    url: '/Categories/FillCategory',
                    type: "GET",
                    dataType: "JSON",
                    data: { cate: cate },
                    success: function (categories) {
                        $("#category_id").html(""); // clear before appending new list
                        $("#category_id").append(
                            $('<option></option>').val("").html("Loại chi tiết"));
                        $.each(categories, function (i, cate) {
                            $("#category_id").append(
                                $('<option></option>').val(cate.id).html(cate.name));
                        });
                    }
                });
            }
        }
        function s_FillCategory() {
            var cate = $('#s_type').val();
            if (!cate || cate == "") {
                $("#s_category_id").html($('<option></option>').val("").html("Loại chi tiết"));
            }
            else {
                $.ajax({
                    url: '/Categories/FillCategory',
                    type: "GET",
                    dataType: "JSON",
                    data: { cate: cate },
                    success: function (categories) {
                        $("#s_category_id").html(""); // clear before appending new list
                        $("#s_category_id").append(
                            $('<option></option>').val("").html("Loại chi tiết"));
                        $.each(categories, function (i, cate) {
                            $("#s_category_id").append(
                                $('<option></option>').val(cate.id).html(cate.name));
                        });
                    }
                });
            }
        }
        function DuyetAllTrongHD() {
            var lstioinct = [];
            $("#ioinct tr").each(function () {
                var per = this.id.replace("ioinct", "");
                lstioinct.push(per);
            });
            $.ajax({
                url: '/InOuts/DuyetAll',
                type: "POST",
                dataType: "JSON",
                data: { ids: lstioinct },
                success: function (b) {
                    document.location.reload();
                }
            });
        }
        function DuyetAllNgoaiHD() {
            var lstioinct = [];
            $("#iooutct tr").each(function () {
                var per = this.id.replace("iooutct", "");
                lstioinct.push(per);
            });
            $.ajax({
                url: '/InOuts/DuyetAll',
                type: "POST",
                dataType: "JSON",
                data: { ids: lstioinct },
                success: function (b) {
                    document.location.reload();
                }
            });
        }
    </script>
}
