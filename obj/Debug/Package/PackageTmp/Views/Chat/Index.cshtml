


@using NiceHandles.Models
@model List<ChatSession>
@{
    var sessionId = ViewBag.CurrentSessionId ?? Guid.NewGuid();
    Layout = null;
    var sessionList = Model ?? new List<ChatSession>();
    var messages = ViewBag.Messages as List<ChatMessage> ?? new List<ChatMessage>();
    var files = ViewBag.ChatFiles as List<ChatFile> ?? new List<ChatFile>();
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Trợ lý AI</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script src="~/Scripts/jquery.signalR-2.4.3.min.js"></script>
    <script src="/signalr/hubs"></script>
    <style>
        html, body {
            scroll-behavior: smooth;
        }

        #chatArea {
            height: 70vh; /* hoặc 70vh hay 100% trừ phần header/footer */
            overflow-y: auto !important;
            border: 1px solid #ccc;
            padding: 10px;
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <div class="row" style="height: 100vh;">
            <!-- Sidebar -->
            <div class="col-md-3 border-end bg-light p-3 overflow-auto d-flex flex-column p-0">
                <div style="height: 70vh;" class="flex-grow-1 overflow-auto ">
                    <h5>📁 Lịch sử hội thoại</h5>
                    @foreach (var session in sessionList.OrderByDescending(s => s.CreatedAt))
                    {
                        <div class="list-group-item d-flex align-items-center mb-1">
                            <form method="post" action="@Url.Action("ChangeName", "Chat")" class="flex-grow-1 d-flex align-items-center">
                                <input type="hidden" name="id" value="@session.Id" />
                                <input type="text" name="name" value="@(session.Name ?? ("Phiên " + session.CreatedAt.ToString("dd/MM HH:mm")))"
                                       class="form-control form-control-sm me-2" onchange="this.form.submit()" />
                            </form>

                            <a href="@Url.Action("Index", new { sessionId = session.Id })" class="btn btn-sm btn-outline-secondary me-1" title="Chọn phiên này">🔁</a>

                            <form method="post" action="@Url.Action("DeleteSession", "Chat")"
                                  onsubmit="return confirm('Bạn có chắc muốn xoá phiên này không?')" class="d-inline">
                                <input type="hidden" name="id" value="@session.Id" />
                                <button class="btn btn-sm btn-danger" title="Xoá">🗑</button>
                            </form>
                        </div>
                    }
                </div>
                <hr />
                <form method="post" enctype="multipart/form-data" action="@Url.Action("UploadFile", "Chat")">
                    <input type="hidden" name="sessionId" value="@sessionId" />
                    <div class="mb-2">
                        <input type="file" name="file" class="form-control" />
                    </div>
                    <button type="submit" class="btn btn-sm btn-outline-primary w-100">📎 Tải tệp lên</button>
                </form>

                @if (files.Any())
                {
                    <hr />
                    <h6>📚 Tài liệu đã gửi:</h6>
                    <ul class="list-unstyled small">
                        @foreach (var file in files.OrderByDescending(f => f.UploadedAt))
                        {
                            <li>📄 @file.FileName</li>
                        }
                    </ul>
                }
            </div>

            <!-- Main Chat -->
            <div class="col-md-9 d-flex flex-column p-0">
                <div class="border-bottom p-3 bg-primary text-white">
                    <h4 class="mb-0">🤖 Trợ lý AI cá nhân</h4>
                </div>

                <div id="chatArea" class="flex-grow-1 overflow-auto p-4" style="background:#f9f9f9">
                    @foreach (var msg in messages)
                    {
                        var alignClass = msg.Role == "user" ? "text-end text-primary" : "text-start text-dark";
                        <div class="mb-3 @alignClass">
                            <div class="p-2 rounded bg-light d-inline-block">
                                @Html.Raw(msg.Content)
                            </div>
                        </div>
                    }
                </div>

                <div class="border-top p-3 bg-white">
                    <div class="input-group">
                        <input type="text" id="message" class="form-control" placeholder="Nhập câu hỏi..." />
                        <button class="btn btn-success" onclick="sendMessage()">Gửi</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        const sessionId = "@sessionId";
        const chat = document.getElementById("chatArea");

        $.connection.hub.url = "/signalr";
        const chatHub = $.connection.chatHub;

        chatHub.client.receiveMessage = function (user, message) {
            appendBubble(user, message, user === "AI" ? "text-start text-dark" : "text-end text-primary");
            scrollToBottom();
        };

        $.connection.hub.start().done(function () {
            console.log("✅ Kết nối chatHub thành công");
            scrollToBottom();
            document.getElementById("message").focus();
        });

        async function sendMessage() {
            const input = document.getElementById("message");
            const msg = input.value;
            if (!msg.trim()) return;

            appendBubble("", msg, "text-end text-primary");
            input.value = "";
            scrollToBottom();
            const res = await fetch("/Chat/Ask", {
                method: "POST",
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ sessionId, userMessage: msg })
            });
            const data = await res.json();
            chatHub.server.broadcastMessage("AI", data.reply, sessionId);
        }

        function appendBubble(sender, text, alignClass) {
            const bubble = document.createElement("div");
            bubble.className = `mb-3 ${alignClass}`;
            bubble.innerHTML = `<div class='p-2 rounded bg-light d-inline-block'>${text}</div>`;
            chat.appendChild(bubble);
        }

        function scrollToBottom() {
            chat.scrollTo({ top: chat.scrollHeight, behavior: 'smooth' });
        }

        document.getElementById("message").addEventListener("keypress", function (e) {
            if (e.key === "Enter") {
                e.preventDefault();
                sendMessage();
            }
        });
    </script>
</body>
</html>
