@model NiceHandles.Models.Document
@using NiceHandles.Models

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutSetting.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)
        @Html.Hidden("str_service", ViewBag.str_service as string)
        <div class="form-group">
            @Html.Label("Mã", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.code, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Tên", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Tên file mẫu", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.template, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.template, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Loại giấy tờ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.type, new SelectList(XDocument.sType, "Key", "Value"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.template, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Dịch vụ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <ul style="margin: 0; padding: 0;">
                    @foreach (var item in ViewBag.lst_services)
                    {
                        <li style="list-style: none;">
                            <input style="height: 20px; width: 20px;" type="checkbox" value="@item.id" />
                            <span style="vertical-align: super;">@item.name</span>
                        </li>
                    }
                </ul>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Chỉnh sửa" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Về danh sách", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        var lst = [];
        $(document).ready(function () {
            lst = $("#str_service").val().split(",");
            $(lst).each(function () {
                var sv = this;
                $("input:checkbox").each(function () {
                    if (sv == $(this).val()) {
                        $(this).prop("checked", true).trigger("change");
                    }
                });
            });
            $("input:checkbox").change(function () {
                var x = $(this).val();
                const index = lst.indexOf(x);
                if (this.checked) {
                    if (index == -1) {
                        lst.push(x);
                    }
                }
                else {
                    if (index > -1) {
                        lst.splice(index, 1);
                    }
                }
                $("#str_service").val(lst);
            });
        });
    </script>
}
