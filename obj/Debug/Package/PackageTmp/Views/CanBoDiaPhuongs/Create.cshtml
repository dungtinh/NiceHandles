@model NiceHandles.Models.CanBoDiaPhuong
@using NiceHandles.Models
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var db = new NHModel();
}

<h2>Thêm mới</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Cán bộ địa phương</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.Label("Đơn vị hành chính cấp", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.thuoccap, new SelectList(XModels.sThuocCap, "Key", "Value"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.HiddenFor(model => model.fk_id)
        <div class="form-group">
            @Html.Label("Xã", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("capxa", new SelectList(db.Addresses.Select(x => new { id = x.id, name = x.name }), "id", "name", ViewBag.CAPXA), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.fk_id, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Thôn", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("capthon", new SelectList(db.DvhcC1.Select(x => new { id = x.id, name = x.name }), "id", "name", ViewBag.CAPTHON), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.fk_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Họ tên", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Chức vụ", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.chucvu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.chucvu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Địa chỉ GMap", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.gmap, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.gmap, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Số điện thoại", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.phoneno, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.phoneno, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Ghi chú", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.note, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.note, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Thêm mới" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Về danh sách", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $("#thuoccap").change(function () {
                var thuoccap = $(this).val();
                if (thuoccap == 0) {
                    $("#capthon").prop("disabled", false);
                } else {
                    $("#capthon").prop("disabled", true);
                }
            });
            $("#thuoccap").trigger("change");
            $("#capxa").change(function () {
                $.ajax({
                    url: '/CanBoDiaPhuongs/GetThon',
                    type: "GET",
                    dataType: "JSON",
                    data: { xa: $(this).val() },
                    success: function (thons) {
                        $("#capthon").html(""); // clear before appending new list
                        $.each(thons, function (i, thon) {
                            $("#capthon").append(
                                $('<option></option>').val(thon.id).html(thon.name));
                        });
                    }
                });
            });
            $("#capxa").trigger("change");
            $('form').submit(function (e) {
                var thuoccap = $("#thuoccap").val();
                if (thuoccap == 0) {
                    $("#fk_id").val($("#capthon").val());
                } else {
                    $("#fk_id").val($("#capxa").val());
                }
                this.submit();
            });
        });
    </script>
}
