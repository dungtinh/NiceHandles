@model NiceHandles.Models.XAccount
@using NiceHandles.Models
@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Account</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.obj.id)
        @Html.HiddenFor(model => model.obj.UserName)
        @Html.HiddenFor(model => model.obj.chotso)
        @Html.HiddenFor(model => model.obj.sticknote)
        @Html.HiddenFor(model => model.obj.isNV)
        @Html.HiddenFor(model => model.obj.hasNote)

        <div class="form-group">
            @Html.Label("Tên tài khoản", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.obj.fullname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.obj.fullname, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Tên hiển thị", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.obj.disname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.obj.disname, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Số điện thoại", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.obj.phoneno, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.obj.phoneno, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Email", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.obj.email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.obj.email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Lương", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.obj.luong, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                @Html.ValidationMessageFor(model => model.obj.luong, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Phụ cấp", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.obj.phucap, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                @Html.ValidationMessageFor(model => model.obj.phucap, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Tên ngân hàng", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.obj.bank_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.obj.bank_name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Số tài khoản", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.obj.bankno, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.obj.bankno, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Ngày sinh", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.obj.birthday, new { htmlAttributes = new { @class = "form-control datetime", Value = Html.Raw(Model.obj.birthday.HasValue ? Model.obj.birthday.Value.ToString("dd/MM/yyyy") : null) } })
                @Html.ValidationMessageFor(model => model.obj.birthday, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Giới tính", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.obj.gender, "Nam", new { @class = "btn-check", autocomplete = "off", @checked = true, id = "a_gioitinh_1" })
                <label class="btn btn-outline-primary" for="a_gioitinh_1">Nam</label>
                @Html.RadioButtonFor(model => model.obj.gender, "Nữ", new { @class = "btn-check", autocomplete = "off", id = "a_gioitinh_2" })
                <label class="btn btn-outline-primary" for="a_gioitinh_2">Nữ</label>
                @Html.ValidationMessageFor(model => model.obj.gender, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Hộ khẩu thường trú", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.obj.hktt, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.obj.hktt, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("CMND/CCCD", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.obj.sogiayto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.obj.sogiayto, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Ngày cấp ", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.obj.ngaycap_gt, new { htmlAttributes = new { @class = "form-control datetime", Value = Html.Raw(Model.obj.ngaycap_gt.HasValue ? Model.obj.ngaycap_gt.Value.ToString("dd/MM/yyyy") : null) } })
                @Html.ValidationMessageFor(model => model.obj.ngaycap_gt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Nơi cấp", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.obj.noicap_gt, new { htmlAttributes = new { @class = "form-control", rel = "noicap" } })
                @Html.ValidationMessageFor(model => model.obj.noicap_gt, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Ủy quyền", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.obj.is_uq, (int)XModels.eYesNo.No, new { @class = "btn-check", autocomplete = "off", @checked = true, id = "is_uq1" })
                <label class="btn btn-outline-primary" for="is_uq1">Không</label>
                @Html.RadioButtonFor(model => model.obj.is_uq, (int)XModels.eYesNo.Yes, new { @class = "btn-check", autocomplete = "off", id = "is_uq2" })
                <label class="btn btn-outline-primary" for="is_uq2">Có</label>
                @Html.ValidationMessageFor(model => model.obj.is_uq, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Trạng thái", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.obj.sta, new SelectList(XAccount.sStatus, "Key", "Value"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.obj.sta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Lưu lại" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Về danh sách", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $(".datetime").datepicker({
                "autoclose": true,
                "todayHighlight": true,
                "dateFormat": "dd/mm/yyyy",
                "format": "dd/mm/yyyy",
            }).datepicker();
        });
        $(function () {
            $.validator.methods.date = function (value, element) {
                return this.optional(element) || moment(value, "DD/MM/YYYY", true).isValid();
            }
        });
    </script>
}
