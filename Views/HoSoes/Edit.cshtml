@model NiceHandles.Models.HoSo
@using NiceHandles.Models
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var db = new NHModel();
    var ACCOUNTS = db.Accounts.Where(x => x.sta == (int)XAccount.eStatus.Processing && x.is_uq == (int)XModels.eYesNo.Yes).ToArray();
    var CONTRACTS = db.Contracts.Where(x => x.status == (int)XContract.eStatus.Processing).Select(x => new { x.id, x.name });
}

<h2>CHỈNH SỬA HỒ SƠ</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)
        @Html.HiddenFor(model => model.status)
        @Html.HiddenFor(model => model.link_filecad)
        @Html.HiddenFor(model => model.link_filecad_qr)
        @Html.HiddenFor(model => model.link_gmap_qr)
        @Html.HiddenFor(model => model.step_id)
        @Html.HiddenFor(model => model.time_created)

        <div class="form-group">
            @Html.LabelFor(model => model.name, "Tên hồ sơ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.contract_id, "Hợp đồng", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.contract_id, new SelectList(CONTRACTS, "id", "name"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.contract_id, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.account_id, "Người phụ trách", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.account_id, new SelectList(ACCOUNTS, "id", "fullname"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.account_id, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.account_id_soanthao, "Người soạn thảo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.account_id_soanthao, new SelectList(ACCOUNTS, "id", "fullname"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.account_id_soanthao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.service_id, "Dịch vụ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.service_id, new SelectList(db.Services, "id", "name"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.service_id, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.link_gmap, "Vị trí Gmap", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.link_gmap, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.link_gmap, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.priority, "Ưu tiên", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.priority, new SelectList(XContract.sPriority, "Key", "Value"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.priority, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.trang4, "Thường/Trang 4", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.trang4, new SelectList(XContract.sType, "Key", "Value"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.trang4, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ngoaigiao, "Ngoại giao", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ngoaigiao, new SelectList(XHoSo.sNgoaiGiao, "Key", "Value"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ngoaigiao, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.note, "Ghi chú", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.note, new { @class = "form-control summernote" })
                @Html.ValidationMessageFor(model => model.note, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Lưu lại" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}