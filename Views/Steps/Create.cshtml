@model NiceHandles.Models.Step

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutSetting.cshtml";
}

<h2>Thêm mới</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Mã", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Tên", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Màu sắc", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.color, new { @type = "color" })
                @Html.ValidationMessageFor(model => model.color, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Bước tiếp", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.next, ViewBag.STEP as SelectList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.next, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Bước lùi lại", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.prev, ViewBag.STEP as SelectList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.prev, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Người phụ trách", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <ul style="margin: 0; padding: 0;">
                    @foreach (var item in ViewBag.lst_accounts)
                    {
                        <li style="list-style: none;">
                            <input style="height: 20px; width: 20px;" type="checkbox" value="@item.id" />
                            <span style="vertical-align: super;">@item.fullname</span>
                        </li>
                    }
                </ul>
                @Html.Hidden("str_account")
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Hướng dẫn", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.description, new { @class = "form-control summernote", @rows = 10 })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Thêm mới" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Về danh sách", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        var lst = [];
        $(document).ready(function () {
            $("input:checkbox").change(function () {
                var x = $(this).val();
                const index = lst.indexOf(x);
                if (this.checked) {
                    if (index == -1) {
                        lst.push(x);
                    }
                }
                else {
                    if (index > -1) {
                        lst.splice(index, 1);
                    }
                }
                $("#str_account").val(lst);
            });
            $('.summernote').summernote({
                height: 500,
                fontSizes: ['8', '9', '10', '11', '12', '14', '18'],
                fontNames: ['Arial', 'Tahoma'],
                toolbar: [
                    ['style', ['bold', 'italic', 'underline']],
                    ['fontsize', ['fontsize']],
                    ['font', ['strikethrough']],
                    ['para', ['ol', 'paragraph']],
                    ['color', ['color']],
                ]
            });
        });
    </script>
}

