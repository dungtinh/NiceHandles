@model NiceHandles.Models.TreoPhuon
@using NiceHandles.Models
@{
    ViewBag.Title = "Thêm mới";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var db = new NHModel();
}

<h2>Thêm mới</h2>

@using (Html.BeginForm("Create", "TreoPhuons", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Treo Phướn</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Hình ảnh", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("imgs", "", new { @class = "form-control", @type = "file" })
                @Html.ValidationMessageFor(model => model.Images, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Xã", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("capxa", new SelectList(db.Addresses.Select(x => new { id = x.id, name = x.name }), "id", "name"), new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Thôn", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.DvhcC1_id, new SelectList(db.DvhcC1.Select(x => new { id = x.id, name = x.name }), "id", "name"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DvhcC1_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GoogleMap, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GoogleMap, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GoogleMap, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NgayTreo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NgayTreo, new { htmlAttributes = new { @class = "form-control datetime" } })
                @Html.ValidationMessageFor(model => model.NgayTreo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NgayKiemTra, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NgayKiemTra, new { htmlAttributes = new { @class = "form-control datetime" } })
                @Html.ValidationMessageFor(model => model.NgayKiemTra, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.note, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.note, new { @class = "form-control", @rows = 5 })
                @Html.ValidationMessageFor(model => model.note, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Thêm mới" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Về danh sách", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $(".datetime").datepicker({
                "autoclose": true,
                "todayHighlight": true,
                "dateFormat": "dd/mm/yyyy",
                "format": "dd/mm/yyyy",
            }).datepicker("setDate", new Date());
            $(function () {
                $.validator.methods.date = function (value, element) {
                    return this.optional(element) || moment(value, "DD/MM/YYYY", true).isValid();
                }
            });
            $("#capxa").change(function () {
                $.ajax({
                    url: '/CanBoDiaPhuongs/GetThon',
                    type: "GET",
                    dataType: "JSON",
                    data: { xa: $(this).val() },
                    success: function (thons) {
                        $("#DvhcC1_id").html(""); // clear before appending new list
                        $.each(thons, function (i, thon) {
                            $("#DvhcC1_id").append(
                                $('<option></option>').val(thon.id).html(thon.name));
                        });
                    }
                });
            });
            $("#capxa").trigger("change");
        });
    </script>
}