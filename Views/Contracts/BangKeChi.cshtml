@model PagedList.IPagedList<NiceHandles.Models.DSHoSo>
@using PagedList.Mvc;
@using NiceHandles.Models

@{
    ViewBag.Title = "Hợp đồng";
    var db = new NHModel();
    var Categories = new SelectListItem[0];
    var ADDRESS = new SelectList(db.Addresses, "id", "name");
    var SERVICES = new SelectList(db.Services, "id", "name");
    var PARTNER = new SelectList(db.Partners.OrderBy(x => x.sothutu), "id", "code");
    var STATUS = new SelectList(XContract.sStatus, "Key", "Value");
}

<h2>Bảng kê các khoản chi cho hợp đồng</h2>

@using (Html.BeginForm("Index", "Contracts", FormMethod.Get))
{
    <div class="row">
        <div class="col-sm-2">
            <div class="form-group">
                @Html.TextBox("Search_Data", ViewBag.FilterValue as string, new { @class = "form-control", placeholder = "Tìm kiếm" })
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                @Html.DropDownList("add", ADDRESS, "--- Địa chỉ ---", new { @class = "form-control", title = "Địa chỉ" })
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                @Html.DropDownList("ser", SERVICES, "--- Dịch vụ ---", new { @class = "form-control", title = "Dịch vụ" })
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                @Html.DropDownList("par", PARTNER, "--- Đối tác ---", new { @class = "form-control", title = "Đối tác" })
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                @Html.DropDownList("sta", STATUS, "--- Trạng thái ---", new { @class = "form-control", title = "Trạng thái" })
            </div>
        </div>
        <div class="col-lg-2">
            <div class="form-group">
                <button type="submit" class="btn btn-danger" style="height: 32px; width: 100px;">Tìm kiếm</button>
            </div>
        </div>
    </div>
}
<table class="table table-hover">
    <tr>
        <th>
            Hợp đồng
        </th>
        <th>
            Dịch vụ
        </th>
        <th>
            Đối tác
        </th>
        <th>
            Giá trị HD
        </th>
        <th>
            % Đối tác
        </th>
        <th>
            Đã thu
        </th>
        <th>
            Đã chi
        </th>
        <th>
            Thu - chi
        </th>
        <th>
            Ngày nhận
        </th>
        <th>
            Trạng thái
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        var temp = db.vCalculatorMoneys.Where(x => x.contract_id == item.id).ToArray();
        var taked_amount = temp != null ? temp.Where(x => x.type == (int)XCategory.eType.Thu).Sum(x => x.amount) : 0;
        var spent_amount = temp != null ? temp.Where(x => x.type == (int)XCategory.eType.Chi).Sum(x => x.amount) : 0;
        var profit_amount = taked_amount - spent_amount;
        <tr>
            <td>
                @Html.ActionLink(item.customer_name, "Details", new { id = item.id })
            </td>
            <td>
                @Html.ActionLink(item.address_name, "Details", new { id = item.id })
            </td>
            <td>
                @item.partner_name
            </td>
            <td>
                @item.amount.ToString("N0")
            </td>
            <td>
                @item.consuming.ToString("N0")
            </td>
            <td class="text-success">
                @taked_amount.ToString("N0")
            </td>
            <td class="text-danger">
                @spent_amount.ToString("N0")
            </td>
            <td>
                @profit_amount.ToString("N0")
            </td>
            <td>
                @item.time.ToString("dd/MM/yyyy")
            </td>
            <td>
                @( XContract.sStatus[item.status])
            </td>
            <td>
                @if (item.status == (int)XContract.eStatus.Processing)
                {
                    @Html.ActionLink("Thu chi ", "Create", "InOuts", new { id = item.id }, new { style = "background-color:aliceblue;color:deeppink;" })
                    @Html.Raw(" |")
                    @Html.ActionLink("Sửa", "Edit", new { id = item.id })
                    @Html.Raw(" |")
                    @Html.ActionLink("Xóa", "Delete", new { id = item.id })
                }
            </td>
        </tr>
    }
</table>
@if (Model.PageCount > 1)
{
    <div class="row" style="margin-top: 10px;">
        <div class="col-sm-1">
            Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount
        </div>
        <div class="col-sm-10">
            @Html.PagedListPager(Model, Page_No => Url.Action("Index", new { Page_No, Filter_Value = ViewBag.FilterValue, add = ViewBag.ADD, ser = ViewBag.SER, par = ViewBag.PAR, sta = ViewBag.STA }))
        </div>
    </div>
}